{"version":3,"sources":["webpack:///webpack/bootstrap ad6e6f8a0fd93bacbdc8","webpack:///external \"riot\"","webpack:///external \"lodash\"","webpack:///./app/services.ts","webpack:///./app/utilities/lodashmixins.ts","webpack:///./app/models/section.ts","webpack:///./app/utilities/htmlhelpers.ts","webpack:///external \"jquery\"","webpack:///./app/services/preferences.service.ts","webpack:///external \"moment\"","webpack:///./app/app.ts","webpack:///./styles/styles.scss","webpack:///./app/tags.ts","webpack:///./app/tags/sialia.tag","webpack:///./app/tags/preferences.tag","webpack:///external \"dragula\"","webpack:///./app/models.ts","webpack:///./app/models/document.ts","webpack:///./app/models/vieweroptions.ts","webpack:///./app/models/preferences.ts","webpack:///./app/services/documents.service.ts","webpack:///./node_modules/bluebutton/build/bluebutton.js","webpack:///external \"xmldom\"","webpack:///external \"rxjs/Observable\"","webpack:///./app/config.ts","webpack:///./app/tags/name.tag","webpack:///./app/tags/header.tag","webpack:///./app/tags/panel.tag","webpack:///./app/tags/ccda-section.tag","webpack:///./app/tags/raw.tag","webpack:///./app/tags/nonxml.tag","webpack:///./app/tags/sections/empty.tag","webpack:///./app/tags/sections/generic.tag","webpack:///./app/tags/sections/demographics.tag","webpack:///./app/utilities/lang.ts","webpack:///./app/tags/sections/allergies.tag","webpack:///./app/tags/sections/care-plan.tag","webpack:///./app/tags/sections/chief-complaint.tag","webpack:///./app/tags/sections/encounters.tag","webpack:///./app/tags/sections/functional-status.tag","webpack:///./app/tags/sections/immunization_declines.tag","webpack:///./app/tags/sections/immunizations.tag","webpack:///./app/tags/sections/instructions.tag","webpack:///./app/tags/sections/medications.tag","webpack:///./app/tags/sections/problems.tag","webpack:///./app/tags/sections/procedures.tag","webpack:///./app/tags/sections/results.tag","webpack:///./app/tags/sections/smoking-status.tag","webpack:///./app/tags/sections/vitals.tag","webpack:///external \"bootstrap-sass\""],"names":[],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK,kBAAkB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA;;AAEA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,YAAY;AAC3B;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;;AAEA,sBAAsB;AACtB;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;;AAEA,aAAa;;AAEb;AACA;AACA;AACA,SAAS;;AAET;AACA,M;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,eAAe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxuCAAuC,YAAY;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK,kBAAkB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,WAAW,UAAU;AACrB,wBAAwB;AACxB,wBAAwB;AACxB,yBAAyB;AACzB,0BAA0B;AAC1B,0BAA0B;AAC1B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B,0DAA0D,aAAa;AACvE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA,cAAc,iBAAiB;AAC/B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,gBAAgB;AACjC;AACA,cAAc,kBAAkB;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,I;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,I;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD,2BAA2B;AAC7E;AACA,sCAAsC,YAAY;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;AACP;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC,kCAAkC;AAClC,mCAAmC;AACnC,oCAAoC;AACpC,oCAAoC;AACpC;;AAEA;AACA,iBAAiB,WAAW;;AAE5B;AACA;AACA,qBAAqB,qDAAqD;;AAE1E;AACA;AACA,8BAA8B,gEAAgE;AAC9F,mCAAmC;AACnC,qFAAqF;AACrF,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,WAAW;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;;AAGH,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;AAKA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK,E;AACL;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,uB;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,6BAA6B,mBAAmB;;AAEhD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uB;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA,I;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,oBAAoB;AACzC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,sC;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,iD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,KAAK;;AAEL;AACA,I;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,wC;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB;;AAEhD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;;;;AAKA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,I;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,oBAAoB;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mC;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AA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","file":"sialia.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\t(function (module) {\n \t\t  if (module.exports\n \t\t    && !module.exports.__esModule\n \t\t    && module.exports.default === undefined\n \t\t  ) {\n \t\t    if (module.exports.headers\n \t\t      && module.exports.headers.common\n \t\t      && module.exports.headers.common.Accept\n \t\t      && module.exports.adapter\n \t\t      && module.exports.transformRequest\n \t\t      && module.exports.transformResponse\n \t\t    ) {\n \t\t      return;\n \t\t    }\n \t\t    module.exports.default = module.exports;\n \t\t  }\n \t\t})(module);\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ad6e6f8a0fd93bacbdc8","module.exports = require(\"riot\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"riot\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 1\n// module chunks = 0","export * from './services/preferences.service';\r\nexport * from './services/documents.service';\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./app/services.ts","import _ from 'lodash';\r\n\r\n_.mixin({\r\n    move: function (array, fromIndex, toIndex) {\r\n        array.splice(toIndex, 0, array.splice(fromIndex, 1)[0] );\r\n        return array;\r\n    }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./app/utilities/lodashmixins.ts","import _ from 'lodash';\r\n\r\nexport interface Section {\r\n  key: string;\r\n  display: string;\r\n  tagName: string;\r\n  icon: string;\r\n  sort?: number;\r\n  enabled?: boolean;\r\n}\r\n\r\nexport function updateSortOrder(sections: Section[]): Section[] {\r\n  _.each(sections, (v, k) => {\r\n    v.sort = k;\r\n  });\r\n  return sections;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./app/models/section.ts","import * as lodash from 'lodash';\r\nimport $ from 'jquery';\r\n\r\nexport function getElementIndex(node: HTMLElement): number {\r\n  let children = lodash.filter([].slice.call(node.parentNode.childNodes), { nodeType: 1 });\r\n  return Array.prototype.indexOf.call(children, node);\r\n}\r\n\r\nexport function bootstrapize(html: string): any {\r\n  let $html = $('<div />');\r\n\r\n  $html.html(html);\r\n\r\n  let $all = $html.find('*').removeAttr('width border xmlns');\r\n\r\n  $all.filter('table')\r\n    .addClass('table table-bordered table-striped');\r\n\r\n  return $html.html();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./app/utilities/htmlhelpers.ts","module.exports = require(\"jquery\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jquery\"\n// module id = 6\n// module chunks = 0","import { ViewerOptions, Section, Preferences, DocType } from '../models';\r\nimport _ from 'lodash';\r\n\r\nexport class PreferencesService  {\r\n\r\n    save(opts: ViewerOptions): void {\r\n\r\n        let enabled = _.filter(opts.sections, (item) => {\r\n            return item.enabled;\r\n        });\r\n\r\n        let sortOrder = _.map(opts.sections, (item) => {\r\n            return item.key;\r\n        });\r\n\r\n        let pref = this.getPreferences(opts.pref.type);\r\n        pref.enabledSectionKeys = _.map(enabled, (item) => {\r\n           return item.key;\r\n        });\r\n        pref.sortedSectionKeys = sortOrder;\r\n        pref.isSet = true;\r\n\r\n        let storageId = 'doc_' + opts.pref.type.templateId;\r\n        localStorage.setItem(storageId, JSON.stringify(pref));\r\n\r\n    }\r\n\r\n    getPreferences(docType: DocType): Preferences {\r\n\r\n        let id = docType.templateId,\r\n            storageId = 'doc_' + id,\r\n            prefString = localStorage.getItem(storageId),\r\n            pref = JSON.parse(prefString),\r\n            isSet = pref !== null;\r\n\r\n        if (!isSet) {\r\n            pref = {\r\n                id: id,\r\n                isSet: isSet,\r\n                type: docType,\r\n                enabledSectionKeys: null,\r\n                sortedSectionKeys: null\r\n            };\r\n        }\r\n\r\n        return new Preferences(pref);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./app/services/preferences.service.ts","module.exports = require(\"moment\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 8\n// module chunks = 0","import '../styles/styles.scss';\r\nimport './tags';\r\nimport 'bootstrap-sass';\r\nimport _ from 'lodash';\r\nimport riot from 'riot';\r\nimport { DocumentsService } from './services';\r\nimport { PreferencesService } from './services';\r\n\r\nexport class App {\r\n\r\n    service: DocumentsService = new DocumentsService();\r\n\r\n    constructor(options: any) {\r\n\r\n      let documents = options.docs;\r\n\r\n      this.service.fetch(documents[0].Url).subscribe((options) => {\r\n        options.documents = documents;\r\n        riot.mount('sialia', options);\r\n      });\r\n    }\r\n  }\r\n\r\nwindow['Sialia'] = App;\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./app/app.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./styles/styles.scss\n// module id = 10\n// module chunks = 0","import './tags/sialia.tag';\r\nimport './tags/preferences.tag';\r\nimport './tags/name.tag';\r\nimport './tags/header.tag';\r\nimport './tags/panel.tag';\r\nimport './tags/ccda-section.tag';\r\nimport './tags/raw.tag';\r\nimport './tags/nonxml.tag';\r\nimport './tags/sections/empty.tag';\r\nimport './tags/sections/generic.tag';\r\nimport './tags/sections/demographics.tag';\r\nimport './tags/sections/allergies.tag';\r\nimport './tags/sections/care-plan.tag';\r\nimport './tags/sections/chief-complaint.tag';\r\nimport './tags/sections/encounters.tag';\r\nimport './tags/sections/functional-status.tag';\r\nimport './tags/sections/immunization_declines.tag';\r\nimport './tags/sections/immunizations.tag';\r\nimport './tags/sections/instructions.tag';\r\nimport './tags/sections/medications.tag';\r\nimport './tags/sections/problems.tag';\r\nimport './tags/sections/procedures.tag';\r\nimport './tags/sections/results.tag';\r\nimport './tags/sections/smoking-status.tag';\r\nimport './tags/sections/vitals.tag';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./app/tags.ts","\n    var riot = require('riot')\n    riot.tag2('sialia', '<header data=\"{data}\" sections=\"{sections}\" documents=\"{documents}\"></header> <div class=\"container-fluid sialia-body\"> <div class=\"row\"> <div class=\"col-lg-3 col-sm-4 hidden-xs\" id=\"placeholder\"></div> <div class=\"col-lg-3 col-sm-4\" id=\"left\"> <demographics demographics=\"{data.demographics}\"></demographics> </div> <div class=\"col-lg-9 col-sm-8\" id=\"right\" if=\"{showPreferences && !showNonXml}\"> <preferences sections=\"{sections}\" pref=\"{pref}\"></preferences> </div> <div class=\"col-lg-9 col-sm-8\" id=\"right\" if=\"{!showPreferences && !showNonXml}\"> <ccda-section each=\"{section in sections}\" current=\"{section}\" parent=\"{parent}\"></ccda-section> </div> <div class=\"col-lg-9 col-sm-8\" id=\"right\" if=\"{showNonXml}\"> <nonxml nonxml=\"{data.document.type.nonXmlBody}\"></nonxml> </div> </div> </div>', '', '', function(opts) {\n\n    var self = this;\n    this.data = opts.data;\n    this.pref = opts.pref;\n    this.sections = opts.sections;\n    this.showPreferences = !opts.pref.isSet;\n    this.showNonXml = self.data.document.type.nonXmlBody.type;\n    this.documents = opts.documents;\n    this.dictionary = this.sections.reduce(function(o, x){ o[x.key] = x; return o; }, {});\n    this.on('update', function() {\n\n        // ML - Not showing preferences when the body type is nonXmL.  We just want to show\n        // a link to the document.\n        self.showNonXml = self.data.document.type.nonXmlBody.type !== \"\";\n    });\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sialia.tag\n// module id = 12\n// module chunks = 0","\n    var riot = require('riot')\n    import dragula from 'dragula';\nimport _ from 'lodash';\nimport '../utilities/lodashmixins';\nimport { updateSortOrder } from '../models/section';\nimport { getElementIndex } from '../utilities/htmlhelpers';\nimport { PreferencesService } from '../services';\n\nriot.tag2('preferences', '<h2> <button class=\"btn btn-primary pull-right\" type=\"button\" name=\"button\" onclick=\"{save}\">Save</button> Which sections would you like to see? <small> <a href=\"#\" onclick=\"{enableAll}\">all</a> | <a href=\"#\" onclick=\"{disableAll}\">none</a> (drag to sort)</small> </h2> <p class=\"alert-info\" if=\"{!opts.pref.isSet}\"> This is the first time you are setting up your section preferences for <b>{opts.pref.type.type} {opts.pref.type.displayName}</b> documents. You can order and select sections that are relevant for the care you are providing and we will save these for future use. </p> <ul class=\"list-group\" id=\"preferences\"> <preference-section each=\"{opts.sections}\"></preference-section> </div>', '', '', function(opts) {\n    var self = this;\n    this.preferencesService = new PreferencesService();\n\n    this.on('mount', function () {\n      updateSortOrder();\n      var container = document.getElementById('preferences');\n      dragula([container], {direction: 'vertical'}).on('drop', drop);\n    });\n\n    function drop(el) {\n      var from = _.findIndex(opts.sections, { key: el.key });\n      var to = getElementIndex(el);\n      _.move(opts.sections, from, to);\n      updateSortOrder();\n      self.preferencesService.save(opts);\n      self.update();\n    }\n\n    this.enableAll = function() {\n      _.each(opts.sections, function(s) {\n        s.enabled = true;\n      });\n    }\n\n    this.disableAll = function() {\n      _.each(opts.sections, function(s) {\n        s.enabled = false;\n      });\n    }\n\n    this.save = function() {\n      this.parent.showPreferences = false;\n      this.preferencesService.save(opts);\n      riot.update();\n    }\n\n});\n\nriot.tag2('preference-section', '<li class=\"list-group-item preferences-section text-right\"> <label class=\"checkbox-inline pull-left\"> <input type=\"checkbox\" checked=\"{enabled}\" onchange=\"{change}\"> <i class=\"fa fa-{icon}\"></i> {display} </label> <i class=\"fa fa-bars\" title=\"Drag to sort\"></i> </div>', '', '', function(opts) {\n    this.root.key = this.key;\n\n    this.change = function(e) {\n      e.item.enabled = e.target.checked;\n      this.update();\n    }\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/preferences.tag\n// module id = 13\n// module chunks = 0","module.exports = require(\"dragula\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dragula\"\n// module id = 14\n// module chunks = 0","export * from './models/document';\r\nexport * from './models/section';\r\nexport * from './models/vieweroptions';\r\nexport * from './models/preferences';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./app/models.ts","export class Document {\r\n  name: string;\r\n  url: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./app/models/document.ts","import { Section } from './section';\r\nimport { Preferences } from './preferences';\r\nimport { DocumentsService } from '../services';\r\n\r\nexport class ViewerOptions {\r\n  sections: Section[];\r\n  data: any;\r\n  pref: Preferences;\r\n  documents?: any[];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./app/models/vieweroptions.ts","import _ from 'lodash';\r\n\r\nexport interface DocType {\r\n  displayName: string;\r\n  loinc: string;\r\n  rootTemplateId: string;\r\n  templateId: string;\r\n  type: string;\r\n}\r\n\r\nexport interface IPreferences {\r\n  id: string;\r\n  type: DocType;\r\n  enabledSectionKeys: string[];\r\n  sortedSectionKeys: string[];\r\n  isSet: boolean;\r\n}\r\n\r\nexport class Preferences {\r\n  id: string;\r\n  type: DocType;\r\n  enabledSectionKeys: string[];\r\n  sortedSectionKeys: string[];\r\n  isSet: boolean;\r\n\r\n  constructor(pref: IPreferences) {\r\n    this.id = pref.id;\r\n    this.type = pref.type;\r\n    this.enabledSectionKeys = pref.enabledSectionKeys || [];\r\n    this.sortedSectionKeys = pref.sortedSectionKeys || [];\r\n    this.isSet = pref.isSet;\r\n  }\r\n\r\n  isSectionEnabled(key: string): boolean {\r\n    return _.some(this.enabledSectionKeys, (k) => {\r\n      return k === key;\r\n    });\r\n  }\r\n\r\n  indexOfSection(key: string): number {\r\n    return this.sortedSectionKeys.indexOf(key);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./app/models/preferences.ts","import $ from 'jquery';\r\nimport _ from 'lodash';\r\nimport { bluebutton } from 'bluebutton';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Section, ViewerOptions, Preferences } from '../models';\r\nimport { SECTIONS, IGNORE_SECTIONS } from '../config';\r\nimport { PreferencesService } from './preferences.service';\r\n\r\nlet viewer: any;\r\n\r\nexport class DocumentsService {\r\n\r\n  getSections(bb: any, sections: Section[], ignoreSections: string[], pref: Preferences): Section[] {\r\n\r\n    let allSections = [];\r\n    _.each(bb.data, (val, key) => {\r\n      if (_.includes(ignoreSections, key)) return;\r\n      let match = _.find(sections, s => s.key === key);\r\n      if (match) {\r\n        match.sort = pref.indexOfSection(key);\r\n        allSections.push(match);\r\n      }\r\n      else allSections.push({\r\n        key: key,\r\n        display: val.displayName || key,\r\n        tagName: 'generic',\r\n        icon: 'asterisk',\r\n        sort: pref.indexOfSection(key)\r\n      });\r\n    });\r\n\r\n    // sort by name first, then by sort order\r\n    allSections = _.sortBy(allSections, s => s.display.toLowerCase());\r\n    allSections = _.sortBy(allSections, s => s.sort);\r\n\r\n    // init sort and enabled\r\n    _.each(allSections, (val, index) => {\r\n      val.enabled = pref.isSectionEnabled(val.key);\r\n    });\r\n\r\n    return allSections;\r\n  }\r\n\r\n  fetch(url: string): Observable<ViewerOptions> {\r\n    return Observable.create((observer) => {\r\n      $.get(url, (content) => {\r\n        observer.next(this.load(content));\r\n        observer.complete();\r\n      }, 'text');\r\n    });\r\n  }\r\n\r\n  load(data: any): ViewerOptions {\r\n    let bb = bluebutton(data);\r\n    if (!bb.data) throw 'BlueButton could not parse the file.';\r\n\r\n    let pref = new PreferencesService().getPreferences(bb.data.document.type);\r\n\r\n    return {\r\n      sections: this.getSections(bb, SECTIONS, IGNORE_SECTIONS, pref),\r\n      data: bb.data,\r\n      pref: pref,\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./app/services/documents.service.ts","exports[\"bluebutton\"] =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\t(function (module) {\n/******/ \t\t  if (module.exports\n/******/ \t\t    && !module.exports.__esModule\n/******/ \t\t    && module.exports.default === undefined\n/******/ \t\t  ) {\n/******/ \t\t    if (module.exports.headers\n/******/ \t\t      && module.exports.headers.common\n/******/ \t\t      && module.exports.headers.common.Accept\n/******/ \t\t      && module.exports.adapter\n/******/ \t\t      && module.exports.transformRequest\n/******/ \t\t      && module.exports.transformResponse\n/******/ \t\t    ) {\n/******/ \t\t      return;\n/******/ \t\t    }\n/******/ \t\t    module.exports.default = module.exports;\n/******/ \t\t  }\n/******/ \t\t})(module);\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * ...\n */\n\nvar Codes = __webpack_require__(6);\nvar XML = __webpack_require__(7);\nvar { stripWhitespace } = __webpack_require__(3);\n\n/* exported Core */\nmodule.exports = {\n  parseData: parseData,\n  stripWhitespace: stripWhitespace,\n  json: json,\n  trim: trim,\n  Codes: Codes,\n  XML: XML\n};\n/*\n  * ...\n  */\nfunction parseData(source) {\n  source = stripWhitespace(source);\n  \n  if (source.charAt(0) === '<') {\n    try {\n      return XML.parse(source);\n    } catch (e) {\n      if (console.log) {\n        console.log(\"File looked like it might be XML but couldn't be parsed.\");\n      }\n    }\n  }\n\n  try {\n    return JSON.parse(source);\n  } catch (e) {\n    if (console.error) {\n      console.error(\"Error: Cannot parse this file. BB.js only accepts valid XML \" +\n        \"(for parsing) or JSON (for generation). If you are attempting to provide \" +\n        \"XML or JSON, please run your data through a validator to see if it is malformed.\\n\");\n    }\n    throw e;\n  }\n};\n\n/*\n  * A wrapper around JSON.stringify which allows us to produce customized JSON.\n  *\n  * See https://developer.mozilla.org/en-US/docs/Web/\n  *        JavaScript/Guide/Using_native_JSON#The_replacer_parameter\n  * for documentation on the replacerFn.\n  */\nfunction json() {\n\n  var datePad = function(number) {\n    if (number < 10) {\n      return '0' + number;\n    }\n    return number;\n  };\n  \n  var replacerFn = function(key, value) {\n    /* By default, Dates are output as ISO Strings like \"2014-01-03T08:00:00.000Z.\" This is\n      * tricky when all we have is a date (not a datetime); JS sadly ignores that distinction.\n      *\n      * To paper over this JS wart, we use two different JSON formats for dates and datetimes.\n      * This is a little ugly but makes sure that the dates/datetimes mostly just parse\n      * correclty for clients:\n      *\n      * 1. Datetimes are rendered as standard ISO strings, without the misleading millisecond\n      *    precision (misleading because we don't have it): YYYY-MM-DDTHH:mm:ssZ\n      * 2. Dates are rendered as MM/DD/YYYY. This ensures they are parsed as midnight local-time,\n      *    no matter what local time is, and therefore ensures the date is always correct.\n      *    Outputting \"YYYY-MM-DD\" would lead most browsers/node to assume midnight UTC, which\n      *    means \"2014-04-27\" suddenly turns into \"04/26/2014 at 5PM\" or just \"04/26/2014\"\n      *    if you format it as a date...\n      *\n      * See http://stackoverflow.com/questions/2587345/javascript-date-parse and\n      *     http://blog.dygraphs.com/2012/03/javascript-and-dates-what-mess.html\n      * for more on this issue.\n      */\n    var originalValue = this[key]; // a Date\n\n    if ( value && (originalValue instanceof Date) && !isNaN(originalValue.getTime()) ) {\n\n      // If while parsing we indicated that there was time-data specified, or if we see\n      // non-zero values in the hour/minutes/seconds/millis fields, output a datetime.\n      if (originalValue._parsedWithTimeData ||\n          originalValue.getHours() || originalValue.getMinutes() ||\n          originalValue.getSeconds() || originalValue.getMilliseconds()) {\n\n        // Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/\n        //    Reference/Global_Objects/Date/toISOString\n        return originalValue.getUTCFullYear() +\n          '-' + datePad( originalValue.getUTCMonth() + 1 ) +\n          '-' + datePad( originalValue.getUTCDate() ) +\n          'T' + datePad( originalValue.getUTCHours() ) +\n          ':' + datePad( originalValue.getUTCMinutes() ) +\n          ':' + datePad( originalValue.getUTCSeconds() ) +\n          'Z';\n      }\n      \n      // We just have a pure date\n      return datePad( originalValue.getMonth() + 1 ) +\n        '/' + datePad( originalValue.getDate() ) +\n        '/' + originalValue.getFullYear();\n\n    }\n\n    return value;\n  };\n  \n  return JSON.stringify(this, replacerFn, 2);\n};\n\n\n/*\n  * Removes all `null` properties from an object.\n  */\nfunction trim(o) {\n  var y;\n  for (var x in o) {\n    if (o.hasOwnProperty(x)) {\n      y = o[x];\n      // if (y === null || (y instanceof Object && Object.keys(y).length == 0)) {\n      if (y === null) {\n        delete o[x];\n      }\n      if (y instanceof Object) y = trim(y);\n    }\n  }\n  return o;\n};\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/* Parses out basic data about each section */\n\nmodule.exports = function (ccda, data) {\n\n    var each = function (callback) {\n        for (var i = 0; i < this.length; i++) {\n            callback(this[i]);\n        }\n    };\n\n    var containsTemplateId = function(templateId, data) {\n        for (var property in data) {\n            if (data.hasOwnProperty(property)) {\n                var p = data[property].templateId;\n                //var display = this[property].displayName;\n                if(p) {\n                    if(p === templateId) {\n                        //console.log(\"TemplateId Match \" + templateId + \" \" + display);\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n\n    var allSections = ccda.elsByTag('section');\n    allSections.each = each;\n\n    allSections.each(function(s) {\n\n        var code = s.tag('code').attr('displayName');\n        var templateId =  s.tag('templateId').attr('root');\n\n        var existingTemplateId = containsTemplateId(templateId, data);\n\n        if (code) {\n            var nodeName = code.split(' ').join('_').toLowerCase();\n\n            //console.log(\"NODE NAME \" + nodeName);\n\n            if (!data[nodeName] && !existingTemplateId) {\n                //console.log(\"CREATE NODE \" + code);\n                data[nodeName] = {};\n            }\n\n            if(data[nodeName]) {\n                data[nodeName].displayName = code;\n                data[nodeName].templateId = templateId;\n                data[nodeName].text = s.tag('text').val(true);\n            }\n\n        }\n    });\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the CCDA demographics section\n */\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.demographics = demographics;\n\n  function demographics(ccda) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var data = {}, el;\n    \n    var demographics = ccda.section('demographics');\n    \n    var patient = demographics.tag('patientRole');\n    el = patient.tag('patient').tag('name');\n    var patient_name_dict = parseName(el);\n    \n    el = patient.tag('patient');\n    var dob = parseDate(el.tag('birthTime').attr('value')),\n        gender = Core.Codes.gender(el.tag('administrativeGenderCode').attr('code')),\n        marital_status = Core.Codes.maritalStatus(el.tag('maritalStatusCode').attr('code'));\n    \n    el = patient.tag('addr');\n    var patient_address_dict = parseAddress(el);\n    \n    el = patient.tag('telecom');\n    var home = el.attr('value'),\n        work = null,\n        mobile = null;\n    \n    var email = null;\n    \n    var language = patient.tag('languageCommunication').tag('languageCode').attr('code'),\n        race = patient.tag('raceCode').attr('displayName'),\n        ethnicity = patient.tag('ethnicGroupCode').attr('displayName'),\n        religion = patient.tag('religiousAffiliationCode').attr('displayName');\n    \n    el = patient.tag('birthplace');\n    var birthplace_dict = parseAddress(el);\n    \n    el = patient.tag('guardian');\n    var guardian_relationship = el.tag('code').attr('displayName'),\n        guardian_relationship_code = el.tag('code').attr('code'),\n        guardian_home = el.tag('telecom').attr('value');\n    \n    el = el.tag('guardianPerson').tag('name');\n    var guardian_name_dict = parseName(el);\n    \n    el = patient.tag('guardian').tag('addr');\n    var guardian_address_dict = parseAddress(el);\n    \n    el = patient.tag('providerOrganization');\n    var provider_organization = el.tag('name').val(),\n        provider_phone = el.tag('telecom').attr('value');\n    \n    var provider_address_dict = parseAddress(el.tag('addr'));\n    \n    data = {\n      name: patient_name_dict,\n      dob: dob,\n      gender: gender,\n      marital_status: marital_status,\n      address: patient_address_dict,\n      phone: {\n        home: home,\n        work: work,\n        mobile: mobile\n      },\n      email: email,\n      language: language,\n      race: race,\n      ethnicity: ethnicity,\n      religion: religion,\n      birthplace: {\n        state: birthplace_dict.state,\n        zip: birthplace_dict.zip,\n        country: birthplace_dict.country\n      },\n      guardian: {\n        name: {\n          given: guardian_name_dict.given,\n          family: guardian_name_dict.family\n        },\n        relationship: guardian_relationship,\n        relationship_code: guardian_relationship_code,\n        address: guardian_address_dict,\n        phone: {\n          home: guardian_home\n        }\n      },\n      provider: {\n        organization: provider_organization,\n        phone: provider_phone,\n        address: provider_address_dict\n      }\n    };\n    \n    return data;\n  };\n}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  stripWhitespace: stripWhitespace\n}\n\nfunction stripWhitespace (str) {\n    if (!str) { return str; }\n    return str.replace(/^\\s+|\\s+$/g,'');\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n/*\n * Parser for the CCDAR2 Health Concerns Section\n * 2.16.840.1.113883.10.20.22.2.58\n */\n\nmodule.exports = function(doc) {\n    var self = this;\n    self.doc = doc;\n\n    self.health_concerns_document = function (ccda) {\n        var parseDate = self.doc.parseDate;\n        var parseName = self.doc.parseName;\n        var parseAddress = self.doc.parseAddress;\n    \n        // Helper to create each iterator for collection\n        var each = function (callback) {\n            for (var i = 0; i < this.length; i++) {\n                callback(this[i]);\n            }\n        };\n    \n        var model = {}, el;\n        model.entries = [];\n    \n        model.text = ccda.tag('text').val(true);\n    \n        var health_concerns = ccda.section('health_concerns_document');\n        var title = health_concerns.tag('title').val();\n    \n        health_concerns.entries().each(function(entry) {\n    \n            var entryModel = {};\n            // Parse out the ACT Body\n            //A record of something that is being done, has been done, can be done, or is intended or requested to be done.\n            var act = entry.tag('act');\n            var er = act.elsByTag('entryRelationship');\n            var templateId = act.tag('templateId').attr('root');\n            var id = act.tag('id').attr('root');\n            var statusCode = act.tag('statusCode').attr('code');\n            var code = act.tag('code');\n            var name = code.attr('displayName');\n            var effectiveTime = parseDate(entry.tag('effectiveTime'));\n    \n            // The model we want to return in json\n            var actModel = {\n                effective_time: effectiveTime,\n                name: name,\n                entry_relationship:[]\n            };\n    \n            // Parse Entity Relationship child nodes\n    \n            var ers = entry.elsByTag('entryRelationship');\n            ers.each = each;\n    \n            ers.each(function(er){\n    \n                var erModel = {\n                    type_code : er.attr('typeCode'),\n                    observations : []\n                };\n    \n                var obs = er.elsByTag('observation');\n                obs.each = each;\n    \n                // Parse out Obsevations for Each ER\n                obs.each(function(ob) {\n                    erModel.observations.push({\n                        class_code: ob.attr('classCode'),\n                        mood_code: ob.attr('moodCode'),\n                        display_name : ob.tag('value').attr('displayName'),\n                        status: ob.tag('statusCode').attr('code')\n                    });\n                });\n    \n                actModel.entry_relationship.push(erModel);\n    \n            });\n    \n            // Add ACT Model to our final return model\n            entryModel['act'] = actModel;\n            model.entries.push(entryModel);\n        });\n    \n        return model;\n    };    \n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*\n * ...\n */\n\nvar Core = __webpack_require__(0);\n\nvar Documents = __webpack_require__(9);\n\nvar Generators = __webpack_require__(14);\n\nvar Parsers = __webpack_require__(18);\n\n\n/* exported BlueButton */\nmodule.exports = function (source, opts) {\n  var type, parsedData, parsedDocument;\n  \n  // Look for options\n  if (!opts) opts = {};\n  \n  // Detect and parse the source data\n  parsedData = Core.parseData(source);\n  \n  // Detect and parse the document\n  if (opts.parser) {\n    \n    // TODO: parse the document with provided custom parser\n    parsedDocument = opts.parser();\n    \n  } else {\n    var documents = new Documents();\n    type = documents.detect(parsedData);\n    var parsers = new Parsers(documents);\n    switch (type) {\n      case 'c32':\n        parsedData = documents.C32.process(parsedData);\n        parsedDocument = parsers.C32.run(parsedData);\n        break;\n      case 'ccda':\n        parsedData = documents.CCDA.process(parsedData);\n        parsedDocument = parsers.CCDA.run(parsedData);\n        break;\n      case 'ccdar2':\n        parsedData = documents.CCDAR2.process(parsedData);\n        parsedDocument = parsers.CCDAR2.run(parsedData);\n        break;\n      case 'ccd':\n        parsedData = documents.CCD.process(parsedData);\n        parsedDocument = parsers.CCD.run(parsedData);\n        break;\n      case 'json':\n        /* Expects a call like:\n         * BlueButton(json string, {\n         *   generatorType: 'ccda',\n         *   template: < EJS file contents >\n         * })\n         * The returned \"type\" will be the requested type (not \"json\")\n         * and the XML will be turned as a string in the 'data' key\n         */\n        switch (opts.generatorType) {\n          // only the unit tests ever need to worry about this testingMode argument\n          case 'c32':\n            type = 'c32';\n            parsedDocument = Generators.C32.run(parsedData, opts.template, opts.testingMode);\n            break;\n          case 'ccda':\n            type = 'ccda';\n            parsedDocument = Generators.CCDA.run(parsedData, opts.template, opts.testingMode);\n            break;\n        }\n    }\n  }\n  \n  return {\n    type: type,\n    data: parsedDocument,\n    source: parsedData\n  };\n\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n/*\n * ...\n */\n\n\n  \n/*\n  * Administrative Gender (HL7 V3)\n  * http://phinvads.cdc.gov/vads/ViewValueSet.action?id=8DE75E17-176B-DE11-9B52-0015173D1785\n  * OID: 2.16.840.1.113883.1.11.1\n  */\nvar GENDER_MAP = {\n  'F': 'female',\n  'M': 'male',\n  'UN': 'undifferentiated'\n};\n\n/*\n  * Marital Status (HL7)\n  * http://phinvads.cdc.gov/vads/ViewValueSet.action?id=46D34BBC-617F-DD11-B38D-00188B398520\n  * OID: 2.16.840.1.114222.4.11.809\n  */\nvar MARITAL_STATUS_MAP = {\n  'N': 'annulled',\n  'C': 'common law',\n  'D': 'divorced',\n  'P': 'domestic partner',\n  'I': 'interlocutory',\n  'E': 'legally separated',\n  'G': 'living together',\n  'M': 'married',\n  'O': 'other',\n  'R': 'registered domestic partner',\n  'A': 'separated',\n  'S': 'single',\n  'U': 'unknown',\n  'B': 'unmarried',\n  'T': 'unreported',\n  'W': 'widowed'\n};\n\n/*\n  * Religious Affiliation (HL7 V3)\n  * https://phinvads.cdc.gov/vads/ViewValueSet.action?id=6BFDBFB5-A277-DE11-9B52-0015173D1785\n  * OID: 2.16.840.1.113883.5.1076\n  */\nvar RELIGION_MAP = {\n  \"1001\": \"adventist\",\n  \"1002\": \"african religions\",\n  \"1003\": \"afro-caribbean religions\",\n  \"1004\": \"agnosticism\",\n  \"1005\": \"anglican\",\n  \"1006\": \"animism\",\n  \"1061\": \"assembly of god\",\n  \"1007\": \"atheism\",\n  \"1008\": \"babi & baha'i faiths\",\n  \"1009\": \"baptist\",\n  \"1010\": \"bon\",\n  \"1062\": \"brethren\",\n  \"1011\": \"cao dai\",\n  \"1012\": \"celticism\",\n  \"1013\": \"christian (non-catholic, non-specific)\",\n  \"1063\": \"christian scientist\",\n  \"1064\": \"church of christ\",\n  \"1065\": \"church of god\",\n  \"1014\": \"confucianism\",\n  \"1066\": \"congregational\",\n  \"1015\": \"cyberculture religions\",\n  \"1067\": \"disciples of christ\",\n  \"1016\": \"divination\",\n  \"1068\": \"eastern orthodox\",\n  \"1069\": \"episcopalian\",\n  \"1070\": \"evangelical covenant\",\n  \"1017\": \"fourth way\",\n  \"1018\": \"free daism\",\n  \"1071\": \"friends\",\n  \"1072\": \"full gospel\",\n  \"1019\": \"gnosis\",\n  \"1020\": \"hinduism\",\n  \"1021\": \"humanism\",\n  \"1022\": \"independent\",\n  \"1023\": \"islam\",\n  \"1024\": \"jainism\",\n  \"1025\": \"jehovah's witnesses\",\n  \"1026\": \"judaism\",\n  \"1027\": \"latter day saints\",\n  \"1028\": \"lutheran\",\n  \"1029\": \"mahayana\",\n  \"1030\": \"meditation\",\n  \"1031\": \"messianic judaism\",\n  \"1073\": \"methodist\",\n  \"1032\": \"mitraism\",\n  \"1074\": \"native american\",\n  \"1075\": \"nazarene\",\n  \"1033\": \"new age\",\n  \"1034\": \"non-roman catholic\",\n  \"1035\": \"occult\",\n  \"1036\": \"orthodox\",\n  \"1037\": \"paganism\",\n  \"1038\": \"pentecostal\",\n  \"1076\": \"presbyterian\",\n  \"1039\": \"process, the\",\n  \"1077\": \"protestant\",\n  \"1078\": \"protestant, no denomination\",\n  \"1079\": \"reformed\",\n  \"1040\": \"reformed/presbyterian\",\n  \"1041\": \"roman catholic church\",\n  \"1080\": \"salvation army\",\n  \"1042\": \"satanism\",\n  \"1043\": \"scientology\",\n  \"1044\": \"shamanism\",\n  \"1045\": \"shiite (islam)\",\n  \"1046\": \"shinto\",\n  \"1047\": \"sikism\",\n  \"1048\": \"spiritualism\",\n  \"1049\": \"sunni (islam)\",\n  \"1050\": \"taoism\",\n  \"1051\": \"theravada\",\n  \"1081\": \"unitarian universalist\",\n  \"1052\": \"unitarian-universalism\",\n  \"1082\": \"united church of christ\",\n  \"1053\": \"universal life church\",\n  \"1054\": \"vajrayana (tibetan)\",\n  \"1055\": \"veda\",\n  \"1056\": \"voodoo\",\n  \"1057\": \"wicca\",\n  \"1058\": \"yaohushua\",\n  \"1059\": \"zen buddhism\",\n  \"1060\": \"zoroastrianism\"\n};\n\n/*\n  * Race & Ethnicity (HL7 V3)\n  * Full list at http://phinvads.cdc.gov/vads/ViewCodeSystem.action?id=2.16.840.1.113883.6.238\n  * OID: 2.16.840.1.113883.6.238\n  *\n  * Abbreviated list closer to real usage at: (Race / Ethnicity)\n  * https://phinvads.cdc.gov/vads/ViewValueSet.action?id=67D34BBC-617F-DD11-B38D-00188B398520\n  * https://phinvads.cdc.gov/vads/ViewValueSet.action?id=35D34BBC-617F-DD11-B38D-00188B398520\n  */\nvar RACE_ETHNICITY_MAP = {\n  '2028-9': 'asian',\n  '2054-5': 'black or african american',\n  '2135-2': 'hispanic or latino',\n  '2076-8': 'native',\n  '2186-5': 'not hispanic or latino',\n  '2131-1': 'other',\n  '2106-3': 'white'\n};\n\n/*\n  * Role (HL7 V3)\n  * https://phinvads.cdc.gov/vads/ViewCodeSystem.action?id=2.16.840.1.113883.5.111\n  * OID: 2.16.840.1.113883.5.111\n  */\nvar ROLE_MAP = {\n  \"ACC\": \"accident site\",\n  \"ACHFID\":  \"accreditation location identifier\",\n  \"ACTMIL\":  \"active duty military\",\n  \"ALL\": \"allergy clinic\",\n  \"AMB\": \"ambulance\",\n  \"AMPUT\":   \"amputee clinic\",\n  \"ANTIBIOT\":    \"antibiotic\",\n  \"ASSIST\":  \"assistive non-person living subject\",\n  \"AUNT\":    \"aunt\",\n  \"B\":   \"blind\",\n  \"BF\":  \"beef\",\n  \"BILL\":    \"billing contact\",\n  \"BIOTH\":   \"biotherapeutic non-person living subject\",\n  \"BL\":  \"broiler\",\n  \"BMTC\":    \"bone marrow transplant clinic\",\n  \"BMTU\":    \"bone marrow transplant unit\",\n  \"BR\":  \"breeder\",\n  \"BREAST\":  \"breast clinic\",\n  \"BRO\": \"brother\",\n  \"BROINLAW\":    \"brother-in-law\",\n  \"C\":   \"calibrator\",\n  \"CANC\": \"child and adolescent neurology clinic\",\n  \"CAPC\": \"child and adolescent psychiatry clinic\",\n  \"CARD\": \"ambulatory health care facilities; clinic/center; rehabilitation: cardiac facilities\",\n  \"CAS\": \"asylum seeker\",\n  \"CASM\":    \"single minor asylum seeker\",\n  \"CATH\":    \"cardiac catheterization lab\",\n  \"CCO\": \"clinical companion\",\n  \"CCU\": \"coronary care unit\",\n  \"CHEST\":   \"chest unit\",\n  \"CHILD\":   \"child\",\n  \"CHLDADOPT\":   \"adopted child\",\n  \"CHLDFOST\":    \"foster child\",\n  \"CHLDINLAW\":   \"child in-law\",\n  \"CHR\": \"chronic care facility\",\n  \"CLAIM\":   \"claimant\",\n  \"CN\":  \"national\",\n  \"CNRP\":    \"non-country member without residence permit\",\n  \"CNRPM\":   \"non-country member minor without residence permit\",\n  \"CO\":  \"companion\",\n  \"COAG\":    \"coagulation clinic\",\n  \"COCBEN\":  \"continuity of coverage beneficiary\",\n  \"COMM\":    \"community location\",\n  \"COMMUNITYLABORATORY\": \"community laboratory\",\n  \"COUSN\":   \"cousin\",\n  \"CPCA\":    \"permit card applicant\",\n  \"CRIMEVIC\":    \"crime victim\",\n  \"CRP\": \"non-country member with residence permit\",\n  \"CRPM\":    \"non-country member minor with residence permit\",\n  \"CRS\": \"colon and rectal surgery clinic\",\n  \"CSC\": \"community service center\",\n  \"CVDX\":    \"cardiovascular diagnostics or therapeutics unit\",\n  \"DA\":  \"dairy\",\n  \"DADDR\":   \"delivery address\",\n  \"DAU\": \"natural daughter\",\n  \"DAUADOPT\":    \"adopted daughter\",\n  \"DAUC\":    \"daughter\",\n  \"DAUFOST\": \"foster daughter\",\n  \"DAUINLAW\":    \"daughter in-law\",\n  \"DC\":  \"therapeutic class\",\n  \"DEBR\":    \"debridement\",\n  \"DERM\":    \"dermatology clinic\",\n  \"DIFFABL\": \"differently abled\",\n  \"DOMPART\": \"domestic partner\",\n  \"DPOWATT\": \"durable power of attorney\",\n  \"DR\":  \"draft\",\n  \"DU\":  \"dual\",\n  \"DX\":  \"diagnostics or therapeutics unit\",\n  \"E\":   \"electronic qc\",\n  \"ECHO\":    \"echocardiography lab\",\n  \"ECON\":    \"emergency contact\",\n  \"ENDO\":    \"endocrinology clinic\",\n  \"ENDOS\":   \"endoscopy lab\",\n  \"ENROLBKR\":    \"enrollment broker\",\n  \"ENT\": \"otorhinolaryngology clinic\",\n  \"EPIL\":    \"epilepsy unit\",\n  \"ER\":  \"emergency room\",\n  \"ERL\": \"enrollment\",\n  \"ETU\": \"emergency trauma unit\",\n  \"EXCEST\":  \"executor of estate\",\n  \"EXT\": \"extended family member\",\n  \"F\":   \"filler proficiency\",\n  \"FAMDEP\":  \"family dependent\",\n  \"FAMMEMB\": \"family member\",\n  \"FI\":  \"fiber\",\n  \"FMC\": \"family medicine clinic\",\n  \"FRND\":    \"unrelated friend\",\n  \"FSTUD\":   \"full-time student\",\n  \"FTH\": \"father\",\n  \"FTHINLAW\":    \"father-in-law\",\n  \"FULLINS\": \"fully insured coverage sponsor\",\n  \"G\":   \"group\",\n  \"GACH\":    \"hospitals; general acute care hospital\",\n  \"GD\":  \"generic drug\",\n  \"GDF\": \"generic drug form\",\n  \"GDS\": \"generic drug strength\",\n  \"GDSF\":    \"generic drug strength form\",\n  \"GGRFTH\":  \"great grandfather\",\n  \"GGRMTH\":  \"great grandmother\",\n  \"GGRPRN\":  \"great grandparent\",\n  \"GI\":  \"gastroenterology clinic\",\n  \"GIDX\":    \"gastroenterology diagnostics or therapeutics lab\",\n  \"GIM\": \"general internal medicine clinic\",\n  \"GRFTH\":   \"grandfather\",\n  \"GRMTH\":   \"grandmother\",\n  \"GRNDCHILD\":   \"grandchild\",\n  \"GRNDDAU\": \"granddaughter\",\n  \"GRNDSON\": \"grandson\",\n  \"GRPRN\":   \"grandparent\",\n  \"GT\":  \"guarantor\",\n  \"GUADLTM\": \"guardian ad lidem\",\n  \"GUARD\":   \"guardian\",\n  \"GYN\": \"gynecology clinic\",\n  \"HAND\":    \"hand clinic\",\n  \"HANDIC\":  \"handicapped dependent\",\n  \"HBRO\":    \"half-brother\",\n  \"HD\":  \"hemodialysis unit\",\n  \"HEM\": \"hematology clinic\",\n  \"HLAB\":    \"hospital laboratory\",\n  \"HOMEHEALTH\":  \"home health\",\n  \"HOSP\":    \"hospital\",\n  \"HPOWATT\": \"healthcare power of attorney\",\n  \"HRAD\":    \"radiology unit\",\n  \"HSIB\":    \"half-sibling\",\n  \"HSIS\":    \"half-sister\",\n  \"HTN\": \"hypertension clinic\",\n  \"HU\":  \"hospital unit\",\n  \"HUSB\":    \"husband\",\n  \"HUSCS\":   \"specimen collection site\",\n  \"ICU\": \"intensive care unit\",\n  \"IEC\": \"impairment evaluation center\",\n  \"INDIG\":   \"member of an indigenous people\",\n  \"INFD\":    \"infectious disease clinic\",\n  \"INJ\": \"injured plaintiff\",\n  \"INJWKR\":  \"injured worker\",\n  \"INLAB\":   \"inpatient laboratory\",\n  \"INPHARM\": \"inpatient pharmacy\",\n  \"INV\": \"infertility clinic\",\n  \"JURID\":   \"jurisdiction location identifier\",\n  \"L\":   \"pool\",\n  \"LABORATORY\":  \"laboratory\",\n  \"LOCHFID\": \"local location identifier\",\n  \"LY\":  \"layer\",\n  \"LYMPH\":   \"lympedema clinic\",\n  \"MAUNT\":   \"maternalaunt\",\n  \"MBL\": \"medical laboratory\",\n  \"MCOUSN\":  \"maternalcousin\",\n  \"MGDSF\":   \"manufactured drug strength form\",\n  \"MGEN\":    \"medical genetics clinic\",\n  \"MGGRFTH\": \"maternalgreatgrandfather\",\n  \"MGGRMTH\": \"maternalgreatgrandmother\",\n  \"MGGRPRN\": \"maternalgreatgrandparent\",\n  \"MGRFTH\":  \"maternalgrandfather\",\n  \"MGRMTH\":  \"maternalgrandmother\",\n  \"MGRPRN\":  \"maternalgrandparent\",\n  \"MHSP\":    \"military hospital\",\n  \"MIL\": \"military\",\n  \"MOBL\":    \"mobile unit\",\n  \"MT\":  \"meat\",\n  \"MTH\": \"mother\",\n  \"MTHINLAW\":    \"mother-in-law\",\n  \"MU\":  \"multiplier\",\n  \"MUNCLE\":  \"maternaluncle\",\n  \"NBOR\":    \"neighbor\",\n  \"NBRO\":    \"natural brother\",\n  \"NCCF\":    \"nursing or custodial care facility\",\n  \"NCCS\":    \"neurology critical care and stroke unit\",\n  \"NCHILD\":  \"natural child\",\n  \"NEPH\":    \"nephrology clinic\",\n  \"NEPHEW\":  \"nephew\",\n  \"NEUR\":    \"neurology clinic\",\n  \"NFTH\":    \"natural father\",\n  \"NFTHF\":   \"natural father of fetus\",\n  \"NIECE\":   \"niece\",\n  \"NIENEPH\": \"niece/nephew\",\n  \"NMTH\":    \"natural mother\",\n  \"NOK\": \"next of kin\",\n  \"NPRN\":    \"natural parent\",\n  \"NS\":  \"neurosurgery unit\",\n  \"NSIB\":    \"natural sibling\",\n  \"NSIS\":    \"natural sister\",\n  \"O\":   \"operator proficiency\",\n  \"OB\":  \"obstetrics clinic\",\n  \"OF\":  \"outpatient facility\",\n  \"OMS\": \"oral and maxillofacial surgery clinic\",\n  \"ONCL\":    \"medical oncology clinic\",\n  \"OPH\": \"opthalmology clinic\",\n  \"OPTC\":    \"optometry clinic\",\n  \"ORG\": \"organizational contact\",\n  \"ORTHO\":   \"orthopedics clinic\",\n  \"OUTLAB\":  \"outpatient laboratory\",\n  \"OUTPHARM\":    \"outpatient pharmacy\",\n  \"P\":   \"patient\",\n  \"PAINCL\":  \"pain clinic\",\n  \"PATHOLOGIST\": \"pathologist\",\n  \"PAUNT\":   \"paternalaunt\",\n  \"PAYOR\":   \"payor contact\",\n  \"PC\":  \"primary care clinic\",\n  \"PCOUSN\":  \"paternalcousin\",\n  \"PEDC\":    \"pediatrics clinic\",\n  \"PEDCARD\": \"pediatric cardiology clinic\",\n  \"PEDE\":    \"pediatric endocrinology clinic\",\n  \"PEDGI\":   \"pediatric gastroenterology clinic\",\n  \"PEDHEM\":  \"pediatric hematology clinic\",\n  \"PEDHO\":   \"pediatric oncology clinic\",\n  \"PEDICU\":  \"pediatric intensive care unit\",\n  \"PEDID\":   \"pediatric infectious disease clinic\",\n  \"PEDNEPH\": \"pediatric nephrology clinic\",\n  \"PEDNICU\": \"pediatric neonatal intensive care unit\",\n  \"PEDRHEUM\":    \"pediatric rheumatology clinic\",\n  \"PEDU\":    \"pediatric unit\",\n  \"PGGRFTH\": \"paternalgreatgrandfather\",\n  \"PGGRMTH\": \"paternalgreatgrandmother\",\n  \"PGGRPRN\": \"paternalgreatgrandparent\",\n  \"PGRFTH\":  \"paternalgrandfather\",\n  \"PGRMTH\":  \"paternalgrandmother\",\n  \"PGRPRN\":  \"paternalgrandparent\",\n  \"PH\":  \"policy holder\",\n  \"PHARM\":   \"pharmacy\",\n  \"PHLEBOTOMIST\":    \"phlebotomist\",\n  \"PHU\": \"psychiatric hospital unit\",\n  \"PL\":  \"pleasure\",\n  \"PLS\": \"plastic surgery clinic\",\n  \"POD\": \"podiatry clinic\",\n  \"POWATT\":  \"power of attorney\",\n  \"PRC\": \"pain rehabilitation center\",\n  \"PREV\":    \"preventive medicine clinic\",\n  \"PRN\": \"parent\",\n  \"PRNINLAW\":    \"parent in-law\",\n  \"PROCTO\":  \"proctology clinic\",\n  \"PROFF\":   \"provider's office\",\n  \"PROG\":    \"program eligible\",\n  \"PROS\":    \"prosthodontics clinic\",\n  \"PSI\": \"psychology clinic\",\n  \"PSTUD\":   \"part-time student\",\n  \"PSY\": \"psychiatry clinic\",\n  \"PSYCHF\":  \"psychiatric care facility\",\n  \"PT\":  \"patient\",\n  \"PTRES\":   \"patient's residence\",\n  \"PUNCLE\":  \"paternaluncle\",\n  \"Q\":   \"quality control\",\n  \"R\":   \"replicate\",\n  \"RADDX\":   \"radiology diagnostics or therapeutics unit\",\n  \"RADO\":    \"radiation oncology unit\",\n  \"RC\":  \"racing\",\n  \"RESPRSN\": \"responsible party\",\n  \"RETIREE\": \"retiree\",\n  \"RETMIL\":  \"retired military\",\n  \"RH\":  \"rehabilitation hospital\",\n  \"RHAT\":    \"addiction treatment center\",\n  \"RHEUM\":   \"rheumatology clinic\",\n  \"RHII\":    \"intellectual impairment center\",\n  \"RHMAD\":   \"parents with adjustment difficulties center\",\n  \"RHPI\":    \"physical impairment center\",\n  \"RHPIH\":   \"physical impairment - hearing center\",\n  \"RHPIMS\":  \"physical impairment - motor skills center\",\n  \"RHPIVS\":  \"physical impairment - visual skills center\",\n  \"RHU\": \"rehabilitation hospital unit\",\n  \"RHYAD\":   \"youths with adjustment difficulties center\",\n  \"RNEU\":    \"neuroradiology unit\",\n  \"ROOM\":    \"roommate\",\n  \"RTF\": \"residential treatment facility\",\n  \"SCHOOL\":  \"school\",\n  \"SCN\": \"screening\",\n  \"SEE\": \"seeing\",\n  \"SELF\":    \"self\",\n  \"SELFINS\": \"self insured coverage sponsor\",\n  \"SH\":  \"show\",\n  \"SIB\": \"sibling\",\n  \"SIBINLAW\":    \"sibling in-law\",\n  \"SIGOTHR\": \"significant other\",\n  \"SIS\": \"sister\",\n  \"SISINLAW\":    \"sister-in-law\",\n  \"SLEEP\":   \"sleep disorders unit\",\n  \"SNF\": \"skilled nursing facility\",\n  \"SNIFF\":   \"sniffing\",\n  \"SON\": \"natural son\",\n  \"SONADOPT\":    \"adopted son\",\n  \"SONC\":    \"son\",\n  \"SONFOST\": \"foster son\",\n  \"SONINLAW\":    \"son in-law\",\n  \"SPMED\":   \"sports medicine clinic\",\n  \"SPON\":    \"sponsored dependent\",\n  \"SPOWATT\": \"special power of attorney\",\n  \"SPS\": \"spouse\",\n  \"STPBRO\":  \"stepbrother\",\n  \"STPCHLD\": \"step child\",\n  \"STPDAU\":  \"stepdaughter\",\n  \"STPFTH\":  \"stepfather\",\n  \"STPMTH\":  \"stepmother\",\n  \"STPPRN\":  \"step parent\",\n  \"STPSIB\":  \"step sibling\",\n  \"STPSIS\":  \"stepsister\",\n  \"STPSON\":  \"stepson\",\n  \"STUD\":    \"student\",\n  \"SU\":  \"surgery clinic\",\n  \"SUBJECT\": \"self\",\n  \"SURF\":    \"substance use rehabilitation facility\",\n  \"THIRDPARTY\":  \"third party\",\n  \"TPA\": \"third party administrator\",\n  \"TR\":  \"transplant clinic\",\n  \"TRAVEL\":  \"travel and geographic medicine clinic\",\n  \"TRB\": \"tribal member\",\n  \"UMO\": \"utilization management organization\",\n  \"UNCLE\":   \"uncle\",\n  \"UPC\": \"underage protection center\",\n  \"URO\": \"urology clinic\",\n  \"V\":   \"verifying\",\n  \"VET\": \"veteran\",\n  \"VL\":  \"veal\",\n  \"WARD\":    \"ward\",\n  \"WIFE\":    \"wife\",\n  \"WL\":  \"wool\",\n  \"WND\": \"wound clinic\",\n  \"WO\":  \"working\",\n  \"WORK\":    \"work site\",\n};\n\nvar PROBLEM_STATUS_MAP = {\n  \"55561003\": \"active\",\n  \"73425007\": \"inactive\",\n  \"413322009\": \"resolved\"\n};\n\n\n// copied from _.invert to avoid making browser users include all of underscore\nvar invertKeys = function(obj) {\n  var result = {};\n  var keys = Object.keys(obj);\n  for (var i = 0, length = keys.length; i < length; i++) {\n    result[obj[keys[i]]] = keys[i];\n  }\n  return result;\n};\n\nvar lookupFnGenerator = function(map) {\n  return function(key) {\n    return map[key] || null;\n  };\n};\nvar reverseLookupFnGenerator = function(map) {\n  return function(key) {\n    if (!key) { return null; }\n    var invertedMap = invertKeys(map);\n    key = key.toLowerCase();\n    return invertedMap[key] || null;\n  };\n};\n\n\nmodule.exports =  {\n  gender: lookupFnGenerator(GENDER_MAP),\n  reverseGender: reverseLookupFnGenerator(GENDER_MAP),\n  maritalStatus: lookupFnGenerator(MARITAL_STATUS_MAP),\n  reverseMaritalStatus: reverseLookupFnGenerator(MARITAL_STATUS_MAP),\n  religion: lookupFnGenerator(RELIGION_MAP),\n  reverseReligion: reverseLookupFnGenerator(RELIGION_MAP),\n  raceEthnicity: lookupFnGenerator(RACE_ETHNICITY_MAP),\n  reverseRaceEthnicity: reverseLookupFnGenerator(RACE_ETHNICITY_MAP),\n  role: lookupFnGenerator(ROLE_MAP),\n  reverseRole: reverseLookupFnGenerator(ROLE_MAP),\n  problemStatus: lookupFnGenerator(PROBLEM_STATUS_MAP),\n  reverseProblemStatus: reverseLookupFnGenerator(PROBLEM_STATUS_MAP)\n};\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * ...\n */\nvar { stripWhitespace } = __webpack_require__(3);\n/*\n  * A function used to wrap DOM elements in an object so methods can be added\n  * to the element object. IE8 does not allow methods to be added directly to\n  * DOM objects.\n  */\nvar wrapElement = function (el) {\n  function wrapElementHelper(currentEl) {\n    return {\n      el: currentEl,\n      template: template,\n      content: content,\n      tag: tag,\n      immediateChildTag: immediateChildTag,\n      elsByTag: elsByTag,\n      attr: attr,\n      boolAttr: boolAttr,\n      val: val,\n      isEmpty: isEmpty\n    };\n  }\n  \n  // el is an array of elements\n  if (el.length) {\n    var els = [];\n    for (var i = 0; i < el.length; i++) {\n      els.push(wrapElementHelper(el[i]));\n    }\n    return els;\n  \n  // el is a single element\n  } else {\n    return wrapElementHelper(el);\n  }\n};\n\n\n/*\n  * Find element by tag name, then attribute value.\n  */\nvar tagAttrVal = function (el, tag, attr, value) {\n  el = el.getElementsByTagName(tag);\n  for (var i = 0; i < el.length; i++) {\n    if (el[i].getAttribute(attr) === value) {\n      return el[i];\n    }\n  }\n};\n\n\n/*\n  * Search for a template ID, and return its parent element.\n  * Example:\n  *   <templateId root=\"2.16.840.1.113883.10.20.22.2.17\"/>\n  * Can be found using:\n  *   el = dom.template('2.16.840.1.113883.10.20.22.2.17');\n  */\nvar template = function (templateId) {\n  var el = tagAttrVal(this.el, 'templateId', 'root', templateId);\n  if (!el) {\n    return emptyEl();\n  } else {\n    return wrapElement(el.parentNode);\n  }\n};\n\n/*\n  * Search for a content tag by \"ID\", and return it as an element.\n  * These are used in the unstructured versions of each section but\n  * referenced from the structured version sometimes.\n  * Example:\n  *   <content ID=\"UniqueNameReferencedElsewhere\"/>\n  * Can be found using:\n  *   el = dom.content('UniqueNameReferencedElsewhere');\n  *\n  * We can't use `getElementById` because `ID` (the standard attribute name\n  * in this context) is not the same attribute as `id` in XML, so there are no matches\n  */\nvar content = function (contentId) {\n    var el = tagAttrVal(this.el, 'content', 'ID', contentId);\n    if (!el) {\n      // check the <td> tag too, which isn't really correct but\n      // will inevitably be used sometimes because it looks like very\n      // normal HTML to put the data directly in a <td>\n      el = tagAttrVal(this.el, 'td', 'ID', contentId);\n    }\n    if (!el) {\n      // Ugh, Epic uses really non-standard locations.\n      el = tagAttrVal(this.el, 'caption', 'ID', contentId) ||\n            tagAttrVal(this.el, 'paragraph', 'ID', contentId) ||\n            tagAttrVal(this.el, 'tr', 'ID', contentId) ||\n            tagAttrVal(this.el, 'item', 'ID', contentId);\n    }\n\n    if (!el) {\n      return emptyEl();\n    } else {\n      return wrapElement(el);\n    }\n  };\n\n\n/*\n  * Search for the first occurrence of an element by tag name.\n  */\nvar tag = function (tag) {\n  var el = this.el.getElementsByTagName(tag)[0];\n  if (!el) {\n    return emptyEl();\n  } else {\n    return wrapElement(el);\n  }\n};\n\n/*\n  * Like `tag`, except it will only count a tag that is an immediate child of `this`.\n  * This is useful for tags like \"text\" which A. may not be present for a given location\n  * in every document and B. have a very different meaning depending on their positioning\n  *\n  *   <parent>\n  *     <target></target>\n  *   </parent>\n  * vs.\n  *   <parent>\n  *     <intermediate>\n  *       <target></target>\n  *     </intermediate>\n  *   </parent>\n  * parent.immediateChildTag('target') will have a result in the first case but not in the second.\n  */\nvar immediateChildTag = function (tag) {\n  var els = this.el.getElementsByTagName(tag);\n  if (!els) { return null; }\n  for (var i = 0; i < els.length; i++) {\n    if (els[i].parentNode === this.el) {\n      return wrapElement(els[i]);\n    }\n  }\n  return emptyEl();\n};\n\n\n/*\n  * Search for all elements by tag name.\n  */\nvar elsByTag = function (tag) {\n  return wrapElement(this.el.getElementsByTagName(tag));\n};\n\n\nvar unescapeSpecialChars = function(s) {\n  if (!s) { return s; }\n  return s.replace(/&lt;/g, '<')\n          .replace(/&gt;/g, '>')\n          .replace(/&amp;/g, '&')\n          .replace(/&quot;/g, '\"')\n          .replace(/&apos;/g, \"'\");\n};\n\n\n/*\n  * Retrieve the element's attribute value. Example:\n  *   value = el.attr('displayName');\n  *\n  * The browser and jsdom return \"null\" for empty attributes;\n  * xmldom (which we now use because it's faster / can be explicitly\n  * told to parse malformed XML as XML anyways), return the empty\n  * string instead, so we fix that here.\n  */\nvar attr = function (attrName) {\n  if (!this.el) { return null; }\n  var attrVal = this.el.getAttribute(attrName);\n  if (attrVal) {\n    return unescapeSpecialChars(attrVal);\n  }\n  return null;\n};\n\n/*\n  * Wrapper for attr() for retrieving boolean attributes;\n  * a raw call attr() will return Strings, which can be unexpected,\n  * since the string 'false' will by truthy\n  */\nvar boolAttr = function (attrName) {\n  var rawAttr = this.attr(attrName);\n  if (rawAttr === 'true' || rawAttr === '1') {\n    return true;\n  }\n  return false;\n};\n\n/*\n  * Retrieve the element's value. For example, if the element is:\n  *   <city>Madison</city>\n  * Use:\n  *   value = el.tag('city').val();\n  *\n  * This function also knows how to retrieve the value of <reference> tags,\n  * which can store their content in a <content> tag in a totally different\n  * part of the document.\n  */\nvar val = function (html) {\n  if (!this.el) { return null; }\n  if (!this.el.childNodes || !this.el.childNodes.length) { return null; }\n  var textContent = html ? this.el.innerHTML : this.el.textContent;\n\n  // if there's no text value here and the only thing inside is a\n  // <reference> tag, see if there's a linked <content> tag we can\n  // get something out of\n  if (!stripWhitespace(textContent)) {\n\n    var contentId;\n    // \"no text value\" might mean there's just a reference tag\n    if (this.el.childNodes.length === 1 &&\n        this.el.childNodes[0].tagName === 'reference') {\n      contentId = this.el.childNodes[0].getAttribute('value');\n\n    // or maybe a newlines on top/above the reference tag\n    } else if (this.el.childNodes.length === 3 &&\n        this.el.childNodes[1].tagName === 'reference') {\n      contentId = this.el.childNodes[1].getAttribute('value');\n\n    } else {\n      return unescapeSpecialChars(textContent);\n    }\n\n    if (contentId && contentId[0] === '#') {\n      contentId = contentId.slice(1); // get rid of the '#'\n      var docRoot = wrapElement(this.el.ownerDocument);\n      var contentTag = docRoot.content(contentId);\n      return contentTag.val();\n    }\n  }\n\n  return unescapeSpecialChars(textContent);\n};\n\n\n/*\n  * Creates and returns an empty DOM element with tag name \"empty\":\n  *   <empty></empty>\n  */\nvar emptyEl = function () {\n  var el = doc.createElement('empty');\n  return wrapElement(el);\n};\n\n\n/*\n  * Determines if the element is empty, i.e.:\n  *   <empty></empty>\n  * This element is created by function `emptyEL`.\n  */\nvar isEmpty = function () {\n  if (this.el.tagName.toLowerCase() === 'empty') {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/*\n  * Cross-browser XML parsing supporting IE8+ and Node.js.\n  */\nfunction parse(data) {\n  // XML data must be a string\n  if (!data || typeof data !== \"string\") {\n    console.log(\"BB Error: XML data is not a string\");\n    return null;\n  }\n  \n  var xml, parser;\n  \n  // Node\n  if (isNode) {\n    parser = new (xmldom.DOMParser)();\n    xml = parser.parseFromString(data, \"text/xml\");\n    \n  // Browser\n  } else {\n    \n    // Standard parser\n    if (window.DOMParser) {\n      parser = new DOMParser();\n      xml = parser.parseFromString(data, \"text/xml\");\n      \n    // IE\n    } else {\n      try {\n        xml = new ActiveXObject(\"Microsoft.XMLDOM\");\n        xml.async = \"false\";\n        xml.loadXML(data);\n      } catch (e) {\n        console.log(\"BB ActiveX Exception: Could not parse XML\");\n      }\n    }\n  }\n  \n  if (!xml || !xml.documentElement || xml.getElementsByTagName(\"parsererror\").length) {\n    console.log(\"BB Error: Could not parse XML\");\n    return null;\n  }\n  \n  return wrapElement(xml);\n};\n\n\n// Establish the root object, `window` in the browser, or `global` in Node.\nvar root = this,\n    xmldom,\n    isNode = false,\n    doc = root.document; // Will be `undefined` if we're in Node\n\n// Check if we're in Node. If so, pull in `xmldom` so we can simulate the DOM.\nif (true) {\n  if (typeof module !== 'undefined' && module.exports) {\n    isNode = true;\n    xmldom = __webpack_require__(8);\n    doc = new xmldom.DOMImplementation().createDocument();\n  }\n}\n\nmodule.exports = {\n  parse: parse\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"xmldom\");\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  * ...\n  */\nvar C32 = __webpack_require__(10);\nvar CCD = __webpack_require__(11);\nvar CCDA = __webpack_require__(12);\nvar CCDAR2 = __webpack_require__(13);\n\nmodule.exports = function() {\n  var self = this;\n\n  self.detect = detect;\n  self.entries = entries;\n  self.parseDate = parseDate;\n  self.parseName = parseName;\n  self.parseAddress = parseAddress;\n  self.C32 = new C32(getEntries);\n  self.CCD = new CCD(getEntries);\n  self.CCDA = new CCDA(getEntries);\n  self.CCDAR2 = new CCDAR2(getEntries);\n};\n\nfunction getEntries() {\n  return entries;\n};\n\nfunction detect(data) {\n  if (!data.template) {\n    return 'json';\n  }\n  \n  if (!data.template('2.16.840.1.113883.3.88.11.32.1').isEmpty()) {\n    return 'c32';\n  } else if(!data.template('2.16.840.1.113883.10.20.22.1.1').isEmpty()) {\n    return 'ccda';\n  } else if(!data.template('2.16.840.1.113883.10.20.22.1.15').isEmpty()) {\n    return 'ccdar2';\n  }else if(!data.template('2.16.840.1.113883.10.20.22.1.2').isEmpty()) {\n    return 'ccd';\n  }\n};\n\n\n/*\n  * Get entries within an element (with tag name 'entry'), adds an `each` function\n  */\nfunction entries() {\n  var each = function (callback) {\n    for (var i = 0; i < this.length; i++) {\n      callback(this[i]);\n    }\n  };\n  \n  var els = this.elsByTag('entry');\n  els.each = each;\n  return els;\n};\n\n\n/*\n  * Parses an HL7 date in String form and creates a new Date object.\n  * \n  * TODO: CCDA dates can be in form:\n  *   <effectiveTime value=\"20130703094812\"/>\n  * ...or:\n  *   <effectiveTime>\n  *     <low value=\"19630617120000\"/>\n  *     <high value=\"20110207100000\"/>\n  *   </effectiveTime>\n  * For the latter, parseDate will not be given type `String`\n  * and will return `null`.\n  */\nfunction parseDate(str) {\n  if (!str || typeof str !== 'string') {\n    return null;\n  }\n\n  // Note: months start at 0 (so January is month 0)\n\n  // e.g., value=\"1999\" translates to Jan 1, 1999\n  if (str.length === 4) {\n    return new Date(str, 0, 1);\n  }\n\n  var year = str.substr(0, 4);\n  // subtract 1 from the month since they're zero-indexed\n  var month = parseInt(str.substr(4, 2), 10) - 1;\n  // days are not zero-indexed. If we end up with the day 0 or '',\n  // that will be equivalent to the last day of the previous month\n  var day = str.substr(6, 2) || 1;\n\n  // check for time info (the presence of at least hours and mins after the date)\n  if (str.length >= 12) {\n    var hour = str.substr(8, 2);\n    var min = str.substr(10, 2);\n    var secs = str.substr(12, 2);\n\n    // check for timezone info (the presence of chars after the seconds place)\n    if (str.length > 14) {\n      // _utcOffsetFromString will return 0 if there's no utc offset found.\n      var utcOffset = _utcOffsetFromString(str.substr(14));\n      // We subtract that offset from the local time to get back to UTC\n      // (e.g., if we're -480 mins behind UTC, we add 480 mins to get back to UTC)\n      min = _toInt(min) - utcOffset;\n    }\n\n    var date = new Date(Date.UTC(year, month, day, hour, min, secs));\n    // This flag lets us output datetime-precision in our JSON even if the time happens\n    // to translate to midnight local time. If we clone the date object, it is not\n    // guaranteed to survive.\n    date._parsedWithTimeData = true;\n    return date;\n  }\n\n  return new Date(year, month, day);\n};\n\n// These regexes and the two functions below are copied from moment.js\n// http://momentjs.com/\n// https://github.com/moment/moment/blob/develop/LICENSE\nvar parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi;\nvar parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nfunction _utcOffsetFromString(string) {\n    string = string || '';\n    var possibleTzMatches = (string.match(parseTokenTimezone) || []),\n        tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n        parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],\n        minutes = +(parts[1] * 60) + _toInt(parts[2]);\n\n    return parts[0] === '+' ? minutes : -minutes;\n}\nfunction _toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        if (coercedNumber >= 0) {\n            value = Math.floor(coercedNumber);\n        } else {\n            value = Math.ceil(coercedNumber);\n        }\n    }\n\n    return value;\n}\n\n\n/*\n  * Parses an HL7 name (prefix / given [] / family)\n  */\nfunction parseName(nameEl) {\n  var prefix = nameEl.tag('prefix').val();\n  \n  var els = nameEl.elsByTag('given');\n  var given = [];\n  for (var i = 0; i < els.length; i++) {\n    var val = els[i].val();\n    if (val) { given.push(val); }\n  }\n  \n  var family = nameEl.tag('family').val();\n  \n  return {\n    prefix: prefix,\n    given: given,\n    family: family\n  };\n};\n\n\n/*\n  * Parses an HL7 address (streetAddressLine [], city, state, postalCode, country)\n  */\nfunction parseAddress(addrEl) {\n  var els = addrEl.elsByTag('streetAddressLine');\n  var street = [];\n  \n  for (var i = 0; i < els.length; i++) {\n    var val = els[i].val();\n    if (val) { street.push(val); }\n  }\n  \n  var city = addrEl.tag('city').val(),\n      state = addrEl.tag('state').val(),\n      zip = addrEl.tag('postalCode').val(),\n      country = addrEl.tag('country').val();\n  \n  return {\n    street: street,\n    city: city,\n    state: state,\n    zip: zip,\n    country: country\n  };\n};\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n/*\n * ...\n */\n \nmodule.exports = function(getEntries) {\n  var self = this;\n\n  self.getEntries = getEntries;\n  self.process = process;\n  self.section = section;\n\n  /*\n  * Preprocesses the C32 document\n  */\n  function process(c32) {\n    c32.section = section;\n    return c32;\n  };\n\n  /*\n    * Finds the section of a C32 document\n    *\n    * Usually we check first for the HITSP section ID and then for the HL7-CCD ID.\n    */\n  function section(name) {\n    var el, entries = self.getEntries();\n    \n    switch (name) {\n      case 'document':\n        return this.template('2.16.840.1.113883.3.88.11.32.1');\n      case 'allergies':\n        el = this.template('2.16.840.1.113883.3.88.11.83.102');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.2');\n        }\n        el.entries = entries;\n        return el;\n      case 'demographics':\n        return this.template('2.16.840.1.113883.3.88.11.32.1');\n      case 'encounters':\n        el = this.template('2.16.840.1.113883.3.88.11.83.127');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.3');\n        }\n        el.entries = entries;\n        return el;\n      case 'immunizations':\n        el = this.template('2.16.840.1.113883.3.88.11.83.117');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.6');\n        }\n        el.entries = entries;\n        return el;\n      case 'results':\n        el = this.template('2.16.840.1.113883.3.88.11.83.122');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.14');\n        }\n        el.entries = entries;\n        return el;\n      case 'medications':\n        el = this.template('2.16.840.1.113883.3.88.11.83.112');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.8');\n        }\n        el.entries = entries;\n        return el;\n      case 'problems':\n        el = this.template('2.16.840.1.113883.3.88.11.83.103');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.11');\n        }\n        el.entries = entries;\n        return el;\n      case 'procedures':\n        el = this.template('2.16.840.1.113883.3.88.11.83.108');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.12');\n        }\n        el.entries = entries;\n        return el;\n      case 'vitals':\n        el = this.template('2.16.840.1.113883.3.88.11.83.119');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.16');\n        }\n        el.entries = entries;\n        return el;\n    }\n    \n    return null;\n  };\n};\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n/*\n * ...\n */\n\nmodule.exports = function (getEntries) {\n    var self = this;\n    self.getEntries = getEntries;\n\n    self.process = process;\n    self.section = section;\n\n    /*\n     * Preprocesses the CCDAR2 document\n     */\n    function process(ccda) {\n        ccda.section = section;\n        return ccda;\n    };\n\n    /*\n     * Finds the section of a CCDA document\n     */\n    function section(name) {\n        var el, entries = self.getEntries();\n\n        switch (name) {\n            case 'document':\n                return this.template('2.16.840.1.113883.10.20.22.1.2');\n            case 'demographics':\n                return this.template('2.16.840.1.113883.10.20.22.1.2');\n            case 'health_concerns_document':\n                el = this.template('2.16.840.1.113883.10.20.22.2.58');\n                el.entries = entries;\n                return el;\n            case 'goals':\n                el = this.template('2.16.840.1.113883.10.20.22.2.60');\n                el.entries = entries;\n                return el;\n            case 'interventions':\n                el = this.template('2.16.840.1.113883.10.20.21.2.3');\n                el.entries = entries;\n                return el;\n            case 'health_status_outcomes':\n                el = this.template('2.16.840.1.113883.10.20.22.2.61');\n                el.entries = entries;\n                return el;\n        }\n\n        return null;\n    };\n}\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n/*\n * ...\n */\n\nmodule.exports = function (getEntries) {\n  var self = this;\n\n  self.getEntries = getEntries;\n  self.process = process;\n  self.section = section;\n  \n  /*\n   * Preprocesses the CCDA document\n   */\n  function process(ccda) {\n    ccda.section = section;\n    return ccda;\n  };  \n  \n  /*\n   * Finds the section of a CCDA document\n   */\n  function section(name) {\n    var el, entries = self.getEntries();\n    \n    switch (name) {\n      case 'document':\n        return this.template('2.16.840.1.113883.10.20.22.1.1');\n      case 'allergies':\n        el = this.template('2.16.840.1.113883.10.20.22.2.6.1');\n        el.entries = entries;\n        return el;\n      case 'care_plan':\n        el = this.template('2.16.840.1.113883.10.20.22.2.10');\n        el.entries = entries;\n        return el;\n      case 'chief_complaint':\n        el = this.template('2.16.840.1.113883.10.20.22.2.13');\n        if (el.isEmpty()) {\n          el = this.template('1.3.6.1.4.1.19376.1.5.3.1.1.13.2.1');\n        }\n        // no entries in Chief Complaint\n        return el;\n      case 'demographics':\n        return this.template('2.16.840.1.113883.10.20.22.1.1');\n      case 'encounters':\n        el = this.template('2.16.840.1.113883.10.20.22.2.22');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.22.2.22.1');\n        }\n        el.entries = entries;\n        return el;\n      case 'functional_statuses':\n        el = this.template('2.16.840.1.113883.10.20.22.2.14');\n        el.entries = entries;\n        return el;\n      case 'immunizations':\n        el = this.template('2.16.840.1.113883.10.20.22.2.2.1');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.22.2.2');\n        }\n        el.entries = entries;\n        return el;\n      case 'instructions':\n        el = this.template('2.16.840.1.113883.10.20.22.2.45');\n        el.entries = entries;\n        return el;\n      case 'results':\n        el = this.template('2.16.840.1.113883.10.20.22.2.3.1');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.22.2.3');\n        }\n        el.entries = entries;\n        return el;\n      case 'medications':\n        el = this.template('2.16.840.1.113883.10.20.22.2.1.1');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.22.2.1');\n        }\n        el.entries = entries;\n        return el;\n      case 'problems':\n        el = this.template('2.16.840.1.113883.10.20.22.2.5.1');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.22.2.5');\n        }\n        el.entries = entries;\n        return el;\n      case 'procedures':\n        el = this.template('2.16.840.1.113883.10.20.22.2.7.1');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.22.2.7');\n        }\n        el.entries = entries;\n        return el;\n      case 'social_history':\n        el = this.template('2.16.840.1.113883.10.20.22.2.17');\n        el.entries = entries;\n        return el;\n      case 'vitals':\n        el = this.template('2.16.840.1.113883.10.20.22.2.4.1');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.22.2.4');\n        }\n        el.entries = entries;\n        return el;\n    }\n    \n    return null;\n  };  \n};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n/*\n * ...\n */\n\nmodule.exports = function (getEntries) {\n    var self = this;\n    self.getEntries = getEntries;\n    \n    self.process = process;\n    self.section = section;   \n\n    /*\n     * Preprocesses the CCDAR2 document\n     */\n    function process(ccda) {\n        ccda.section = section;\n        return ccda;\n    };\n\n    /*\n     * Finds the section of a CCDA document\n     */\n    function section(name) {\n        var el, entries = self.getEntries();\n\n        switch (name) {\n            case 'document':\n                return this.template('2.16.840.1.113883.10.20.22.1.15');\n            case 'demographics':\n                return this.template('2.16.840.1.113883.10.20.22.1.15');\n            case 'health_concerns_document':\n                el = this.template('2.16.840.1.113883.10.20.22.2.58');\n                el.entries = entries;\n                return el;\n            case 'goals':\n                el = this.template('2.16.840.1.113883.10.20.22.2.60');\n                el.entries = entries;\n                return el;\n            case 'interventions':\n                el = this.template('2.16.840.1.113883.10.20.21.2.3');\n                el.entries = entries;\n                return el;\n            case 'health_status_outcomes':\n                el = this.template('2.16.840.1.113883.10.20.22.2.61');\n                el.entries = entries;\n                return el;\n        }\n\n        return null;\n    };\n}\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * ...\n */\n\nvar C32 = __webpack_require__(15);\nvar CCDA = __webpack_require__(16);\n\nvar method = function () {};\n\n/* exported Generators */\nmodule.exports = {\n  method: method,\n  C32: C32,\n  CCDA: CCDA\n};\n  \n\n\n  /* Import ejs if we're in Node. Then setup custom formatting filters\n   */\n  /*if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      ejs = require(\"ejs\");\n    }\n  }\n\n  if (typeof ejs !== 'undefined') {\n    /* Filters are automatically available to ejs to be used like \"... | hl7Date\"\n     * Helpers are functions that we'll manually pass in to ejs.\n     * The intended distinction is that a helper gets called with regular function-call syntax\n     */ /*\n    var pad = function(number) {\n      if (number < 10) {\n        return '0' + number;\n      }\n      return String(number);\n    };\n\n    ejs.filters.hl7Date = function(obj) {\n      try {\n          if (obj === null || obj === undefined) { return 'nullFlavor=\"UNK\"'; }\n          var date = new Date(obj);\n          if (isNaN(date.getTime())) { return obj; }\n\n          var dateStr = null;\n          if (date.getHours() || date.getMinutes() || date.getSeconds()) {\n            // If there's a meaningful time, output a UTC datetime\n            dateStr = date.getUTCFullYear() +\n              pad( date.getUTCMonth() + 1 ) +\n              pad( date.getUTCDate() );\n            var timeStr = pad( date.getUTCHours() ) +\n              pad( date.getUTCMinutes() ) +\n              pad ( date.getUTCSeconds() ) +\n              \"+0000\";\n            return 'value=\"' + dateStr + timeStr + '\"';\n           \n          } else {\n            // If there's no time, don't apply timezone tranformations: just output a date\n            dateStr = String(date.getFullYear()) +\n              pad( date.getMonth() + 1 ) +\n              pad( date.getDate() );\n            return 'value=\"' + dateStr + '\"';\n          }\n\n      } catch (e) {\n          return obj;\n      }\n    };\n\n    var escapeSpecialChars = function(s) {\n      return s.replace(/</g, '&lt;')\n              .replace(/>/g, '&gt;')\n              .replace(/&/g, '&amp;')\n              .replace(/\"/g, '&quot;')\n              .replace(/'/g, '&apos;');\n    };\n\n    ejs.filters.hl7Code = function(obj) {\n      if (!obj) { return ''; }\n\n      var tag = '';\n      var name = obj.name || '';\n      if (obj.name) { tag += 'displayName=\"'+escapeSpecialChars(name)+'\"'; }\n\n      if (obj.code) {\n        tag += ' code=\"'+obj.code+'\"';\n        if (obj.code_system) { tag += ' codeSystem=\"'+escapeSpecialChars(obj.code_system)+'\"'; }\n        if (obj.code_system_name) { tag += ' codeSystemName=\"' +\n                                        escapeSpecialChars(obj.code_system_name)+'\"'; }\n      } else {\n        tag += ' nullFlavor=\"UNK\"';\n      }\n\n      if (!obj.name && ! obj.code) {\n        return 'nullFlavor=\"UNK\"';\n      }\n      \n      return tag;\n    };\n\n    ejs.filters.emptyStringIfFalsy = function(obj) {\n      if (!obj) { return ''; }\n      return obj;\n    };\n\n    if (!ejs.helpers) ejs.helpers = {};\n    ejs.helpers.simpleTag = function(tagName, value) {\n      if (value) {\n        return \"<\"+tagName+\">\"+value+\"</\"+tagName+\">\";\n      } else {\n        return \"<\"+tagName+\" nullFlavor=\\\"UNK\\\" />\";\n      }\n    };\n\n    ejs.helpers.addressTags = function(addressDict) {\n      if (!addressDict) {\n        return '<streetAddressLine nullFlavor=\"NI\" />\\n' +\n                '<city nullFlavor=\"NI\" />\\n' +\n                '<state nullFlavor=\"NI\" />\\n' +\n                '<postalCode nullFlavor=\"NI\" />\\n' +\n                '<country nullFlavor=\"NI\" />\\n';\n      }\n      \n      var tags = '';\n      if (!addressDict.street.length) {\n        tags += ejs.helpers.simpleTag('streetAddressLine', null) + '\\n';\n      } else {\n        for (var i=0; i<addressDict.street.length; i++) {\n          tags += ejs.helpers.simpleTag('streetAddressLine', addressDict.street[i]) + '\\n';\n        }\n      }\n      tags += ejs.helpers.simpleTag('city', addressDict.city) + '\\n';\n      tags += ejs.helpers.simpleTag('state', addressDict.state) + '\\n';\n      tags += ejs.helpers.simpleTag('postalCode', addressDict.zip) + '\\n';\n      tags += ejs.helpers.simpleTag('country', addressDict.country) + '\\n';\n      return tags;\n    };\n\n    ejs.helpers.nameTags = function(nameDict) {\n      if (!nameDict) {\n        return '<given nullFlavor=\"NI\" />\\n' +\n                '<family nullFlavor=\"NI\" />\\n';\n      }\n\n      var tags = '';\n      if (nameDict.prefix) {\n        tags += ejs.helpers.simpleTag('prefix', nameDict.prefix) + '\\n';\n      }\n      if (!nameDict.given.length) {\n        tags += ejs.helpers.simpleTag('given', null) + '\\n';\n      } else {\n        for (var i=0; i<nameDict.given.length; i++) {\n          tags += ejs.helpers.simpleTag('given', nameDict.given[i]) + '\\n';\n        }\n      }\n      tags += ejs.helpers.simpleTag('family', nameDict.family) + '\\n';\n      if (nameDict.suffix) {\n        tags += ejs.helpers.simpleTag('suffix', nameDict.suffix) + '\\n';\n      }\n      return tags;\n    };\n\n  }*/\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n/*\n * ...\n */\n\nmodule.exports = {\n  run: run\n};\n  \n/*\n  * Generates a C32 document\n  */\nfunction run(json, template, testingMode) {\n  /* jshint unused: false */ // only until this stub is actually implemented\n  console.log(\"C32 generation is not implemented yet\");\n  return null;\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * ...\n */\nvar _ = __webpack_require__(17);\n\nmodule.exports = {\n  run: run\n};\n  \n/*\n  * Generates a CCDA document\n  * A lot of the EJS setup happens in generators.js\n  *\n  * If `testingMode` is true, we'll set the \"now\" variable to a specific,\n  * fixed time, so that the expected XML doesn't change across runs\n  */\nfunction run(json, template, testingMode) {\n  if (!template) {\n    console.log(\"Please provide a template EJS file for the Generator to use. \" +\n                \"Load it via fs.readFileSync in Node or XHR in the browser.\");\n    return null;\n  }\n\n  // `now` is actually now, unless we're running this for a test,\n  // in which case it's always Jan 1, 2000 at 12PM UTC\n  var now = (testingMode) ?\n    new Date('2000-01-01T12:00:00Z') : new Date();\n\n  var ccda = _.template(template, {\n    filename: 'ccda.xml',\n    bb: json,\n    now: now,\n    tagHelpers: ejs.helpers,\n    codes: Core.Codes\n  });\n  return ccda;\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"lodash\");\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * ...\n */\nvar C32 = __webpack_require__(19);\nvar CCD = __webpack_require__(30);\nvar CCDA = __webpack_require__(32);\nvar CCDAR2 = __webpack_require__(47);\n\nvar method = function () {};\n\n/* exported Parsers */\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.method = method;\n  self.C32 = new C32(self.doc);\n  self.CCD = new CCD(self.doc);\n  self.CCDA = new CCDA(self.doc);\n  self.CCDAR2 = new CCDAR2(self.doc);\n}; \n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the C32 document\n */\n\nvar Core = __webpack_require__(0);\nvar AllergiesParser = __webpack_require__(20);\nvar DemographicsParser = __webpack_require__(21);\nvar DocumentParser = __webpack_require__(22);\nvar EncountersParser = __webpack_require__(23);\nvar ImmunizationsParser = __webpack_require__(24);\nvar MedicationsParser = __webpack_require__(25);\nvar ProblemsParser = __webpack_require__(26);\nvar ProceduresParser = __webpack_require__(27);\nvar ResultsParser = __webpack_require__(28);\nvar VitalsParser = __webpack_require__(29);\nvar ParseGenericInfo = __webpack_require__(1);\n\nmodule.exports = function(doc) {\n  var self = this;\n\n  self.doc = doc;\n  self.allergiesParser = new AllergiesParser(self.doc);\n  self.demographicsParser = new DemographicsParser(self.doc);\n  self.demographicsParser = new DocumentParser(self.doc);\n  self.encountersParser = new EncountersParser(self.doc);\n  self.immunizationsParser = new ImmunizationsParser(self.doc);\n  self.medicationsParser = new MedicationsParser(self.doc);\n  self.problemsParser = new ProblemsParser(self.doc);\n  self.proceduresParser = new ProceduresParser(self.doc);\n  self.resultsParser = new ResultsParser(self.doc);\n  self.vitalsParser = new VitalsParser(self.doc);\n\n  self.run = function (c32) {\n    var data = {};\n    \n    data.document              = self.demographicsParser.parse(c32);\n    data.allergies             = self.allergiesParser.parse(c32);\n    data.demographics          = self.demographicsParser.parse(c32);\n    data.encounters            = self.encountersParser.parse(c32);\n    var parsedImmunizations    = self.immunizationsParser.parse(c32);\n    data.immunizations         = parsedImmunizations.administered;\n    data.immunization_declines = parsedImmunizations.declined;\n    data.results               = self.resultsParser.parse(c32);\n    data.medications           = self.medicationsParser.parse(c32);\n    data.problems              = self.problemsParser.parse(c32);\n    data.procedures            = self.proceduresParser.parse(c32);\n    data.vitals                = self.vitals.parse(c32);\n    \n    data.json                       = Core.json;\n    data.document.json              = Core.json;\n    data.allergies.json             = Core.json;\n    data.demographics.json          = Core.json;\n    data.encounters.json            = Core.json;\n    data.immunizations.json         = Core.json;\n    data.immunization_declines.json = Core.json;\n    data.results.json               = Core.json;\n    data.medications.json           = Core.json;\n    data.problems.json              = Core.json;\n    data.procedures.json            = Core.json;\n    data.vitals.json                = Core.json;\n  \n    // Sections that are in CCDA but not C32... we want to keep the API\n    // consistent, even if the entries are always null\n    data.smoking_status = {\n      date: null,\n      name: null,\n      code: null,\n      code_system: null,\n      code_system_name: null\n    };\n    data.smoking_status.json = Core.json;\n    \n    data.chief_complaint = {\n      text: null\n    };\n    data.chief_complaint.json = Core.json;\n  \n    data.care_plan = [];\n    data.care_plan.json = Core.json;\n  \n    data.instructions = [];\n    data.instructions.json = Core.json;\n  \n    data.functional_statuses = [];\n    data.functional_statuses.json = Core.json;\n  \n    // Decorate each section with Title, templateId and text and adds missing sections\n    ParseGenericInfo(c32, data);\n  \n    return data;\n  };\n};\n\n\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the C32 allergies section\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.parse = parse;\n\n  function parse(c32) {\n  \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var allergies = c32.section('allergies');\n\n    var data = {}, el;\n    data.entries = [];\n    data.displayName = \"Allergies\";\n    data.templateId = allergies.tag('templateId').attr('root');\n    data.text = allergies.tag('text').val(true);\n\n    allergies.entries().each(function(entry) {\n      \n      el = entry.tag('effectiveTime');\n      var start_date = parseDate(el.tag('low').attr('value')),\n          end_date = parseDate(el.tag('high').attr('value'));\n      \n      el = entry.template('2.16.840.1.113883.3.88.11.83.6').tag('code');\n      var name = el.attr('displayName'),\n          code = el.attr('code'),\n          code_system = el.attr('codeSystem'),\n          code_system_name = el.attr('codeSystemName');\n      \n      // value => reaction_type\n      el = entry.template('2.16.840.1.113883.3.88.11.83.6').tag('value');\n      var reaction_type_name = el.attr('displayName'),\n          reaction_type_code = el.attr('code'),\n          reaction_type_code_system = el.attr('codeSystem'),\n          reaction_type_code_system_name = el.attr('codeSystemName');\n      \n      // reaction\n      el = entry.template('2.16.840.1.113883.10.20.1.54').tag('value');\n      var reaction_name = el.attr('displayName'),\n          reaction_code = el.attr('code'),\n          reaction_code_system = el.attr('codeSystem');\n      \n      // an irregularity seen in some c32s\n      if (!reaction_name) {\n        el = entry.template('2.16.840.1.113883.10.20.1.54').tag('text');\n        if (!el.isEmpty()) {\n          reaction_name = Core.stripWhitespace(el.val());\n        }\n      }\n\n      // severity\n      el = entry.template('2.16.840.1.113883.10.20.1.55').tag('value');\n      var severity = el.attr('displayName');\n      \n      // participant => allergen\n      el = entry.tag('participant').tag('code');\n      var allergen_name = el.attr('displayName'),\n          allergen_code = el.attr('code'),\n          allergen_code_system = el.attr('codeSystem'),\n          allergen_code_system_name = el.attr('codeSystemName');\n\n      // another irregularity seen in some c32s\n      if (!allergen_name) {\n        el = entry.tag('participant').tag('name');\n        if (!el.isEmpty()) {\n          allergen_name = el.val();\n        }\n      }\n      if (!allergen_name) {\n        el = entry.template('2.16.840.1.113883.3.88.11.83.6').tag('originalText');\n        if (!el.isEmpty()) {\n          allergen_name = Core.stripWhitespace(el.val());\n        }\n      }\n      \n      // status\n      el = entry.template('2.16.840.1.113883.10.20.1.39').tag('value');\n      var status = el.attr('displayName');\n      \n      data.entries.push({\n        date_range: {\n          start: start_date,\n          end: end_date\n        },\n        name: name,\n        code: code,\n        code_system: code_system,\n        code_system_name: code_system_name,\n        status: status,\n        severity: severity,\n        reaction: {\n          name: reaction_name,\n          code: reaction_code,\n          code_system: reaction_code_system\n        },\n        reaction_type: {\n          name: reaction_type_name,\n          code: reaction_type_code,\n          code_system: reaction_type_code_system,\n          code_system_name: reaction_type_code_system_name\n        },\n        allergen: {\n          name: allergen_name,\n          code: allergen_code,\n          code_system: allergen_code_system,\n          code_system_name: allergen_code_system_name\n        }\n      });\n    });  \n    return data;\n  }\n};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the C32 demographics section\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.parse = parse;\n\n  function parse(c32) {    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var data = {}, el;\n    \n    var demographics = c32.section('demographics');\n    \n    var patient = demographics.tag('patientRole');\n    el = patient.tag('patient').tag('name');\n    var patient_name_dict = parseName(el);\n    \n    el = patient.tag('patient');\n    var dob = parseDate(el.tag('birthTime').attr('value')),\n        gender = Core.Codes.gender(el.tag('administrativeGenderCode').attr('code')),\n        marital_status = Core.Codes.maritalStatus(el.tag('maritalStatusCode').attr('code'));\n    \n    el = patient.tag('addr');\n    var patient_address_dict = parseAddress(el);\n    \n    el = patient.tag('telecom');\n    var home = el.attr('value'),\n        work = null,\n        mobile = null;\n    \n    var email = null;\n    \n    var language = patient.tag('languageCommunication').tag('languageCode').attr('code'),\n        race = patient.tag('raceCode').attr('displayName'),\n        ethnicity = patient.tag('ethnicGroupCode').attr('displayName'),\n        religion = patient.tag('religiousAffiliationCode').attr('displayName');\n    \n    el = patient.tag('birthplace');\n    var birthplace_dict = parseAddress(el);\n    \n    el = patient.tag('guardian');\n    var guardian_relationship = el.tag('code').attr('displayName'),\n      guardian_relationship_code = el.tag('code').attr('code'),\n        guardian_home = el.tag('telecom').attr('value');\n    \n    el = el.tag('guardianPerson').tag('name');\n    var guardian_name_dict = parseName(el);\n    \n    el = patient.tag('guardian').tag('addr');\n    var guardian_address_dict = parseAddress(el);\n    \n    el = patient.tag('providerOrganization');\n    var provider_organization = el.tag('name').val(),\n        provider_phone = el.tag('telecom').attr('value'),\n        provider_address_dict = parseAddress(el.tag('addr'));\n    \n    data = {\n      name: patient_name_dict,\n      dob: dob,\n      gender: gender,\n      marital_status: marital_status,\n      address: patient_address_dict,\n      phone: {\n        home: home,\n        work: work,\n        mobile: mobile\n      },\n      email: email,\n      language: language,\n      race: race,\n      ethnicity: ethnicity,\n      religion: religion,\n      birthplace: {\n        state: birthplace_dict.state,\n        zip: birthplace_dict.zip,\n        country: birthplace_dict.country\n      },\n      guardian: {\n        name: {\n          given: guardian_name_dict.given,\n          family: guardian_name_dict.family\n        },\n        relationship: guardian_relationship,\n        relationship_code: guardian_relationship_code,\n        address: guardian_address_dict,\n        phone: {\n          home: guardian_home\n        }\n      },\n      provider: {\n        organization: provider_organization,\n        phone: provider_phone,\n        address: provider_address_dict\n      }\n    };\n    \n    return data;\n  };\n}\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the C32 document section\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.parse = parse;\n\n  function parse(c32) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var data = {}, el;\n    \n    var doc = c32.section('document');\n  \n    // Parse Doc Type Info\n    var templates =  doc.elsByTag('templateId');\n    var rootTemplate = templates[0].attr('root');\n    var secondTemplate;\n    if(templates.length >1)\n      secondTemplate = templates[1].attr('root');\n    else\n      secondTemplate = rootTemplate;\n  \n    var loinc = doc.tag('code').attr('code');\n    var templateId = doc.tag('templateId').attr('root');\n    var displayName = doc.tag('code').attr('displayName');\n  \n    var nonXml = doc.tag('nonXMLBody');\n    var nonXmlNodes = nonXml.el.childNodes;\n  \n    var bodyType = \"structured\";\n    var nonXmlBody = {\n      type: \"\",\n      mediaType: \"\",\n      representation: \"\",\n      rawText: \"\",\n      reference: \"\"\n    };\n  \n    if(nonXmlNodes && nonXmlNodes.length > 0) {\n      bodyType = \"unstructured\";\n      var text = nonXml.tag('text');\n      var mediaType = \"\";\n      var representation = \"\";\n      var rawText = \"\";\n      var reference = \"\";\n      var type = \"\";\n  \n      // We have an embedded doc\n      if(text && text.attr('mediaType')) {\n        mediaType = text.attr('mediaType');\n        representation = text.attr('representation');\n        rawText = text.val();\n        type = \"embedded\";\n      }\n  \n      if(text && !mediaType) {\n        reference = text.tag('reference').attr('value');\n        type = \"reference\";\n      }\n      nonXmlBody = {\n        type: type,\n        mediaType: mediaType,\n        representation: representation,\n        rawText: rawText,\n        reference: reference\n      }\n    }\n  \n    var docType = {\n      type: \"CCDAR2\",\n      rootTemplateId: rootTemplate,\n      templateId: secondTemplate,\n      displayName: displayName,\n      loinc: loinc,\n      bodyType: bodyType,\n      nonXmlBody: nonXmlBody\n    };\n    \n    var date = parseDate(doc.tag('effectiveTime').attr('value'));\n    var title = Core.stripWhitespace(doc.tag('title').val());\n    \n    var author = doc.tag('author');\n    el = author.tag('assignedPerson').tag('name');\n    var name_dict = parseName(el);\n    // Sometimes C32s include names that are just like <name>String</name>\n    // and we still want to get something out in that case\n    if (!name_dict.prefix && !name_dict.given.length && !name_dict.family) {\n     name_dict.family = el.val();\n    }\n    \n    el = author.tag('addr');\n    var address_dict = parseAddress(el);\n    \n    el = author.tag('telecom');\n    var work_phone = el.attr('value');\n  \n    var documentation_of_list = [];\n    var performers = doc.tag('documentationOf').elsByTag('performer');\n    for (var i = 0; i < performers.length; i++) {\n      el = performers[i].tag('assignedPerson').tag('name');\n      var performer_name_dict = parseName(el);\n      var performer_phone = performers[i].tag('telecom').attr('value');\n      var performer_addr = parseAddress(el.tag('addr'));\n      documentation_of_list.push({\n        name: performer_name_dict,\n        phone: {\n          work: performer_phone\n        },\n        address: performer_addr\n      });\n    }\n  \n    el = doc.tag('encompassingEncounter');\n    var location_name = Core.stripWhitespace(el.tag('name').val());\n    var location_addr_dict = parseAddress(el.tag('addr'));\n    \n    var encounter_date = null;\n    el = el.tag('effectiveTime');\n    if (!el.isEmpty()) {\n      encounter_date = parseDate(el.attr('value'));\n    }\n    \n    data = {\n      type: docType,\n      date: date,\n      title: title,\n      author: {\n        name: name_dict,\n        address: address_dict,\n        phone: {\n          work: work_phone\n        }\n      },\n      documentation_of: documentation_of_list,\n      location: {\n        name: location_name,\n        address: location_addr_dict,\n        encounter_date: encounter_date\n      }\n    };\n    \n    return data;\n  };\n}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n/*\n * Parser for the C32 encounters section\n */\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.parse = parse;\n\n  function parse(c32) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var encounters = c32.section('encounters');\n  \n    var data = {}, el;\n    data.entries = [];\n    data.displayName = \"Encounters\";\n    data.templateId = encounters.tag('templateId').attr('root');\n    data.text = encounters.tag('text').val(true);\n  \n    encounters.entries().each(function(entry) {\n      \n      var date = parseDate(entry.tag('effectiveTime').attr('value'));\n      if (!date) {\n        date = parseDate(entry.tag('effectiveTime').tag('low').attr('value'));\n      }\n      \n      el = entry.tag('code');\n      var name = el.attr('displayName'),\n          code = el.attr('code'),\n          code_system = el.attr('codeSystem'),\n          code_system_name = el.attr('codeSystemName'),\n          code_system_version = el.attr('codeSystemVersion');\n      \n      // translation\n      el = entry.tag('translation');\n      var translation_name = el.attr('displayName'),\n          translation_code = el.attr('code'),\n          translation_code_system = el.attr('codeSystem'),\n          translation_code_system_name = el.attr('codeSystemName');\n      \n      // performer\n      el = entry.tag('performer');\n      var performer_name = el.tag('name').val(),\n          performer_code = el.attr('code'),\n          performer_code_system = el.attr('codeSystem'),\n          performer_code_system_name = el.attr('codeSystemName');\n      \n      // participant => location\n      el = entry.tag('participant');\n      var organization = el.tag('name').val(),\n          location_dict = parseAddress(el);\n      location_dict.organization = organization;\n  \n      // findings\n      var findings = [];\n      var findingEls = entry.elsByTag('entryRelationship');\n      for (var i = 0; i < findingEls.length; i++) {\n        el = findingEls[i].tag('value');\n        findings.push({\n          name: el.attr('displayName'),\n          code: el.attr('code'),\n          code_system: el.attr('codeSystem')\n        });\n      }\n      \n      data.entries.push({\n        date: date,\n        name: name,\n        code: code,\n        code_system: code_system,\n        code_system_name: code_system_name,\n        code_system_version: code_system_version,\n        findings: findings,\n        translation: {\n          name: translation_name,\n          code: translation_code,\n          code_system: translation_code_system,\n          code_system_name: translation_code_system_name\n        },\n        performer: {\n          name: performer_name,\n          code: performer_code,\n          code_system: performer_code_system,\n          code_system_name: performer_code_system_name\n        },\n        location: location_dict\n      });\n    });\n    \n    return data;\n  };\n}\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the C32 immunizations section\n */\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.parse = parse;\n\n  function parse(c32) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var administeredData = {}, declinedData = {}, product, el;\n  \n    var immunizations = c32.section('immunizations');\n  \n    administeredData.entries = [];\n    administeredData.displayName = \"Immunizations\";\n    administeredData.templateId = immunizations.tag('templateId').attr('root');\n    administeredData.text = immunizations.tag('text').val(true);\n  \n    declinedData.entries = [];\n    declinedData.displayName = \"Immunizations Declined\";\n    declinedData.templateId = immunizations.tag('templateId').attr('root');\n    declinedData.text = immunizations.tag('text').val(true);\n  \n  \n    \n    immunizations.entries().each(function(entry) {\n      \n      // date\n      el = entry.tag('effectiveTime');\n      var date = parseDate(el.attr('value'));\n      if (!date) {\n        date = parseDate(el.tag('low').attr('value'));\n      }\n  \n      // if 'declined' is true, this is a record that this vaccine WASN'T administered\n      el = entry.tag('substanceAdministration');\n      var declined = el.boolAttr('negationInd');\n  \n      // product\n      product = entry.template('2.16.840.1.113883.10.20.1.53');\n      el = product.tag('code');\n      var product_name = el.attr('displayName'),\n          product_code = el.attr('code'),\n          product_code_system = el.attr('codeSystem'),\n          product_code_system_name = el.attr('codeSystemName');\n  \n      // translation\n      el = product.tag('translation');\n      var translation_name = el.attr('displayName'),\n          translation_code = el.attr('code'),\n          translation_code_system = el.attr('codeSystem'),\n          translation_code_system_name = el.attr('codeSystemName');\n  \n      // misc product details\n      el = product.tag('lotNumberText');\n      var lot_number = el.val();\n  \n      el = product.tag('manufacturerOrganization');\n      var manufacturer_name = el.tag('name').val();\n      \n      // route\n      el = entry.tag('routeCode');\n      var route_name = el.attr('displayName'),\n          route_code = el.attr('code'),\n          route_code_system = el.attr('codeSystem'),\n          route_code_system_name = el.attr('codeSystemName');\n      \n      // instructions\n      el = entry.template('2.16.840.1.113883.10.20.1.49');\n      var instructions_text = Core.stripWhitespace(el.tag('text').val());\n      el = el.tag('code');\n      var education_name = el.attr('displayName'),\n          education_code = el.attr('code'),\n          education_code_system = el.attr('codeSystem');\n  \n      // dose\n      el = entry.tag('doseQuantity');\n      var dose_value = el.attr('value'),\n          dose_unit = el.attr('unit');\n      \n      var data = (declined) ? declinedData : administeredData;\n      data.entries.push({\n        date: date,\n        product: {\n          name: product_name,\n          code: product_code,\n          code_system: product_code_system,\n          code_system_name: product_code_system_name,\n          translation: {\n            name: translation_name,\n            code: translation_code,\n            code_system: translation_code_system,\n            code_system_name: translation_code_system_name\n          },\n          lot_number: lot_number,\n          manufacturer_name: manufacturer_name\n        },\n        dose_quantity: {\n          value: dose_value,\n          unit: dose_unit\n        },\n        route: {\n          name: route_name,\n          code: route_code,\n          code_system: route_code_system,\n          code_system_name: route_code_system_name\n        },\n        instructions: instructions_text,\n        education_type: {\n          name: education_name,\n          code: education_code,\n          code_system: education_code_system\n        }\n      });\n    });\n    \n    return {\n      administered: administeredData,\n      declined: declinedData\n    };\n  };\n}\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Core = __webpack_require__(0);\n\n/*\n * Parser for the C32 medications section\n */\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.parse = parse;\n  \n  function parse(c32) {    \n    var parseDate = self.doc.parseDate;\n    var medications = c32.section('medications');\n  \n    var data = {}, el;\n    data.entries = [];\n    data.displayName = \"Medications\";\n    data.templateId = medications.tag('templateId').attr('root');\n    data.text = medications.tag('text').val(true);\n    \n    medications.entries().each(function(entry) {\n  \n      var text = null;\n      el = entry.tag('substanceAdministration').immediateChildTag('text');\n      if (!el.isEmpty()) {\n        // technically C32s don't use this, but C83s (another CCD) do,\n        // and CCDAs do, so we may see it anyways\n        text = Core.stripWhitespace(el.val());\n      }\n  \n      var effectiveTimes = entry.elsByTag('effectiveTime');\n  \n      el = effectiveTimes[0]; // the first effectiveTime is the med start date\n      var start_date = null, end_date = null;\n      if (el) {\n        start_date = parseDate(el.tag('low').attr('value'));\n        end_date = parseDate(el.tag('high').attr('value'));\n      }\n  \n      // the second effectiveTime might the schedule period or it might just\n      // be a random effectiveTime from further in the entry... xsi:type should tell us\n      el = effectiveTimes[1];\n      var schedule_type = null, schedule_period_value = null, schedule_period_unit = null;\n      if (el && el.attr('xsi:type') === 'PIVL_TS') {\n        var institutionSpecified = el.attr('institutionSpecified');\n        if (institutionSpecified === 'true') {\n          schedule_type= 'frequency';\n        } else if (institutionSpecified === 'false') {\n          schedule_type = 'interval';\n        }\n  \n        el = el.tag('period');\n        schedule_period_value = el.attr('value');\n        schedule_period_unit = el.attr('unit');\n      }\n      \n      el = entry.tag('manufacturedProduct').tag('code');\n      var product_name = el.attr('displayName'),\n          product_code = el.attr('code'),\n          product_code_system = el.attr('codeSystem');\n  \n      var product_original_text = null;\n      el = entry.tag('manufacturedProduct').tag('originalText');\n      if (!el.isEmpty()) {\n        product_original_text = Core.stripWhitespace(el.val());\n      }\n      // if we don't have a product name yet, try the originalText version\n      if (!product_name && product_original_text) {\n        product_name = product_original_text;\n      }\n  \n      // irregularity in some c32s\n      if (!product_name) {\n        el = entry.tag('manufacturedProduct').tag('name');\n        if (!el.isEmpty()) {\n          product_name = Core.stripWhitespace(el.val());\n        }\n      }\n      \n      el = entry.tag('manufacturedProduct').tag('translation');\n      var translation_name = el.attr('displayName'),\n          translation_code = el.attr('code'),\n          translation_code_system = el.attr('codeSystem'),\n          translation_code_system_name = el.attr('codeSystemName');\n      \n      el = entry.tag('doseQuantity');\n      var dose_value = el.attr('value'),\n          dose_unit = el.attr('unit');\n      \n      el = entry.tag('rateQuantity');\n      var rate_quantity_value = el.attr('value'),\n          rate_quantity_unit = el.attr('unit');\n      \n      el = entry.tag('precondition').tag('value');\n      var precondition_name = el.attr('displayName'),\n          precondition_code = el.attr('code'),\n          precondition_code_system = el.attr('codeSystem');\n      \n      el = entry.template('2.16.840.1.113883.10.20.1.28').tag('value');\n      var reason_name = el.attr('displayName'),\n          reason_code = el.attr('code'),\n          reason_code_system = el.attr('codeSystem');\n      \n      el = entry.tag('routeCode');\n      var route_name = el.attr('displayName'),\n          route_code = el.attr('code'),\n          route_code_system = el.attr('codeSystem'),\n          route_code_system_name = el.attr('codeSystemName');\n      \n      // participant/playingEntity => vehicle\n      el = entry.tag('participant').tag('playingEntity');\n      var vehicle_name = el.tag('name').val();\n  \n      el = el.tag('code');\n      // prefer the code vehicle_name but fall back to the non-coded one\n      // (which for C32s is in fact the primary field for this info)\n      vehicle_name = el.attr('displayName') || vehicle_name;\n      var vehicle_code = el.attr('code'),\n          vehicle_code_system = el.attr('codeSystem'),\n          vehicle_code_system_name = el.attr('codeSystemName');\n      \n      el = entry.tag('administrationUnitCode');\n      var administration_name = el.attr('displayName'),\n          administration_code = el.attr('code'),\n          administration_code_system = el.attr('codeSystem'),\n          administration_code_system_name = el.attr('codeSystemName');\n      \n      // performer => prescriber\n      el = entry.tag('performer');\n      var prescriber_organization = el.tag('name').val(),\n          prescriber_person = null;\n      \n      data.entries.push({\n        date_range: {\n          start: start_date,\n          end: end_date\n        },\n        text: text,\n        product: {\n          name: product_name,\n          text: product_original_text,\n          code: product_code,\n          code_system: product_code_system,\n          translation: {\n            name: translation_name,\n            code: translation_code,\n            code_system: translation_code_system,\n            code_system_name: translation_code_system_name\n          }\n        },\n        dose_quantity: {\n          value: dose_value,\n          unit: dose_unit\n        },\n        rate_quantity: {\n          value: rate_quantity_value,\n          unit: rate_quantity_unit\n        },\n        precondition: {\n          name: precondition_name,\n          code: precondition_code,\n          code_system: precondition_code_system\n        },\n        reason: {\n          name: reason_name,\n          code: reason_code,\n          code_system: reason_code_system\n        },\n        route: {\n          name: route_name,\n          code: route_code,\n          code_system: route_code_system,\n          code_system_name: route_code_system_name\n        },\n        schedule: {\n          type: schedule_type,\n          period_value: schedule_period_value,\n          period_unit: schedule_period_unit\n        },\n        vehicle: {\n          name: vehicle_name,\n          code: vehicle_code,\n          code_system: vehicle_code_system,\n          code_system_name: vehicle_code_system_name\n        },\n        administration: {\n          name: administration_name,\n          code: administration_code,\n          code_system: administration_code_system,\n          code_system_name: administration_code_system_name\n        },\n        prescriber: {\n          organization: prescriber_organization,\n          person: prescriber_person\n        }\n      });\n    });\n    \n    return data;\n  };\n}\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Core = __webpack_require__(0);\n\n/*\n * Parser for the C32 problems section\n */\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.parse = parse;\n\n  function parse(c32) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var problems = c32.section('problems');\n  \n    var data = {}, el;\n    data.entries = [];\n    data.displayName = \"Problems\";\n    data.templateId = problems.tag('templateId').attr('root');\n    data.text = problems.tag('text').val(true);\n  \n    problems.entries().each(function(entry) {\n      \n      el = entry.tag('effectiveTime');\n      var start_date = parseDate(el.tag('low').attr('value')),\n          end_date = parseDate(el.tag('high').attr('value'));\n      \n      el = entry.template('2.16.840.1.113883.10.20.1.28').tag('value');\n      var name = el.attr('displayName'),\n          code = el.attr('code'),\n          code_system = el.attr('codeSystem'),\n          code_system_name = el.attr('codeSystemName');\n  \n      // Pre-C32 CCDs put the problem name in this \"originalText\" field, and some vendors\n      // continue doing this with their C32, even though it's not technically correct\n      if (!name) {\n        el = entry.template('2.16.840.1.113883.10.20.1.28').tag('originalText');\n        if (!el.isEmpty()) {\n          name = Core.stripWhitespace(el.val());\n        }\n      }\n  \n      el = entry.template('2.16.840.1.113883.10.20.1.28').tag('translation');\n      var translation_name = el.attr('displayName'),\n          translation_code = el.attr('code'),\n          translation_code_system = el.attr('codeSystem'),\n          translation_code_system_name = el.attr('codeSystemName');\n      \n      el = entry.template('2.16.840.1.113883.10.20.1.50');\n      var status = el.tag('value').attr('displayName');\n      \n      var age = null;\n      el = entry.template('2.16.840.1.113883.10.20.1.38');\n      if (!el.isEmpty()) {\n        age = parseFloat(el.tag('value').attr('value'));\n      }\n      \n      data.entries.push({\n        date_range: {\n          start: start_date,\n          end: end_date\n        },\n        name: name,\n        status: status,\n        age: age,\n        code: code,\n        code_system: code_system,\n        code_system_name: code_system_name,\n        translation: {\n          name: translation_name,\n          code: translation_code,\n          code_system: translation_code_system,\n          code_system_name: translation_code_system_name\n        },\n        comment: null // not part of C32\n      });\n    });\n    \n    return data;\n  };\n}\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the C32 procedures section\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.parse = parse;\n\n  function parse(c32) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var procedures = c32.section('procedures');\n  \n    var data = {}, el;\n    data.entries = [];\n    data.displayName = \"Procedures\";\n    data.templateId = procedures.tag('templateId').attr('root');\n    data.text = procedures.tag('text').val(true);\n    \n    procedures.entries().each(function(entry) {\n      \n      el = entry.tag('effectiveTime');\n      var date = parseDate(el.attr('value'));\n      \n      el = entry.tag('code');\n      var name = el.attr('displayName'),\n          code = el.attr('code'),\n          code_system = el.attr('codeSystem');\n  \n      if (!name) {\n        name = Core.stripWhitespace(entry.tag('originalText').val());\n      }\n      \n      // 'specimen' tag not always present\n      el = entry.tag('specimen').tag('code');\n      var specimen_name = el.attr('displayName'),\n          specimen_code = el.attr('code'),\n          specimen_code_system = el.attr('codeSystem');\n      \n      el = entry.tag('performer').tag('addr');\n      var organization = el.tag('name').val(),\n          phone = el.tag('telecom').attr('value');\n      \n      var performer_dict = parseAddress(el);\n      performer_dict.organization = organization;\n      performer_dict.phone = phone;\n      \n      // participant => device\n      el = entry.tag('participant').tag('code');\n      var device_name = el.attr('displayName'),\n          device_code = el.attr('code'),\n          device_code_system = el.attr('codeSystem');\n      \n      data.entries.push({\n        date: date,\n        name: name,\n        code: code,\n        code_system: code_system,\n        specimen: {\n          name: specimen_name,\n          code: specimen_code,\n          code_system: specimen_code_system\n        },\n        performer: performer_dict,\n        device: {\n          name: device_name,\n          code: device_code,\n          code_system: device_code_system\n        }\n      });\n    });\n    \n    return data;\n  };\n}\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the C32 results (labs) section\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.parse = parse;\n\n  function parse(c32) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var results = c32.section('results');\n  \n    var data = {}, el;\n    data.entries = [];\n    data.displayName = \"Results\";\n    data.templateId = results.tag('templateId').attr('root');\n    data.text = results.tag('text').val(true);\n  \n  \n    results.entries().each(function(entry) {\n      \n      el = entry.tag('effectiveTime');\n      var panel_date = parseDate(entry.tag('effectiveTime').attr('value'));\n      if (!panel_date) {\n        panel_date = parseDate(entry.tag('effectiveTime').tag('low').attr('value'));\n      }\n      \n      // panel\n      el = entry.tag('code');\n      var panel_name = el.attr('displayName'),\n          panel_code = el.attr('code'),\n          panel_code_system = el.attr('codeSystem'),\n          panel_code_system_name = el.attr('codeSystemName');\n      \n      var observation;\n      var tests = entry.elsByTag('observation');\n      var tests_data = [];\n      \n      for (var i = 0; i < tests.length; i++) {\n        observation = tests[i];\n        \n        // sometimes results organizers contain non-results. we only want tests\n        if (observation.template('2.16.840.1.113883.10.20.1.31').val()) {\n          var date = parseDate(observation.tag('effectiveTime').attr('value'));\n          \n          el = observation.tag('code');\n          var name = el.attr('displayName'),\n              code = el.attr('code'),\n              code_system = el.attr('codeSystem'),\n              code_system_name = el.attr('codeSystemName');\n  \n          if (!name) {\n            name = Core.stripWhitespace(observation.tag('text').val());\n          }\n      \n          el = observation.tag('translation');\n          var translation_name = el.attr('displayName'),\n          translation_code = el.attr('code'),\n          translation_code_system = el.attr('codeSystem'),\n          translation_code_system_name = el.attr('codeSystemName');\n      \n          el = observation.tag('value');\n          var value = el.attr('value'),\n              unit = el.attr('unit');\n          // We could look for xsi:type=\"PQ\" (physical quantity) but it seems better\n          // not to trust that that field has been used correctly...\n          if (value && !isNaN(parseFloat(value))) {\n            value = parseFloat(value);\n          }\n          if (!value) {\n            value = el.val(); // look for free-text values\n          }\n      \n          el = observation.tag('referenceRange');\n          var reference_range_text = Core.stripWhitespace(el.tag('observationRange').tag('text').val()),\n              reference_range_low_unit = el.tag('observationRange').tag('low').attr('unit'),\n              reference_range_low_value = el.tag('observationRange').tag('low').attr('value'),\n              reference_range_high_unit = el.tag('observationRange').tag('high').attr('unit'),\n              reference_range_high_value = el.tag('observationRange').tag('high').attr('value');\n          \n          tests_data.push({\n            date: date,\n            name: name,\n            value: value,\n            unit: unit,\n            code: code,\n            code_system: code_system,\n            code_system_name: code_system_name,\n            translation: {\n              name: translation_name,\n              code: translation_code,\n              code_system: translation_code_system,\n              code_system_name: translation_code_system_name\n            },\n            reference_range: {\n              text: reference_range_text,\n              low_unit: reference_range_low_unit,\n              low_value: reference_range_low_value,\n              high_unit: reference_range_high_unit,\n              high_value: reference_range_high_value,\n            }\n          });\n        }\n      }\n      \n      data.entries.push({\n        name: panel_name,\n        code: panel_code,\n        code_system: panel_code_system,\n        code_system_name: panel_code_system_name,\n        date: panel_date,\n        tests: tests_data\n      });\n    });\n    \n    return data;\n  };  \n}\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\n/*\n * Parser for the C32 vitals section\n */\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.parse = parse;\n\n  function parse(c32) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var vitals = c32.section('vitals');\n  \n    var data = {}, el;\n    data.entries = [];\n    data.displayName = \"Vitals\";\n    data.templateId = vitals.tag('templateId').attr('root');\n    data.text = vitals.tag('text').val(true);\n    \n    vitals.entries().each(function(entry) {\n      \n      el = entry.tag('effectiveTime');\n      var entry_date = parseDate(el.attr('value'));\n      \n      var result;\n      var results = entry.elsByTag('component');\n      var results_data = [];\n      \n      for (var j = 0; j < results.length; j++) {\n        result = results[j];\n        \n        // Results\n        \n        el = result.tag('code');\n        var name = el.attr('displayName'),\n            code = el.attr('code'),\n            code_system = el.attr('codeSystem'),\n            code_system_name = el.attr('codeSystemName');\n        \n        el = result.tag('value');\n        var value = parseFloat(el.attr('value')),\n            unit = el.attr('unit');\n        \n        results_data.push({\n          name: name,\n          code: code,\n          code_system: code_system,\n          code_system_name: code_system_name,\n          value: value,\n          unit: unit\n        });\n      }\n      \n      data.entries.push({\n        date: entry_date,\n        results: results_data\n      });\n    });\n    \n    return data;\n  };\n}\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the CCDAR2 document\n */\n\nvar ParseGenericInfo = __webpack_require__(1);\nvar Core = __webpack_require__(0);\nvar DocumentParser = __webpack_require__(31);\nvar DemographicsParser = __webpack_require__(2);\nvar HealthConcernsParser = __webpack_require__(4);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.documentParser = new DocumentParser(self.doc);\n  self.demographicsParser = new DemographicsParser(self.doc);\n  self.healthConcernsParser = new HealthConcernsParser(self.doc);\n  \n  self.run = function (ccda) {\n    var data = {};\n\n    data.document              = self.documentParser.document(ccda);\n    data.demographics          = self.demographicsParser.demographics(ccda);\n    data.health_concerns_document  = self.healthConcernsParser.health_concerns_document(ccda);\n    data.json                  = Core.json;\n\n    // Decorate each section with Title, templateId and text and adds missing sections\n    ParseGenericInfo(ccda, data);\n\n    return data;\n  };\n}\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the CCDAR2 document section\n */\nvar Core = __webpack_require__(0);\n\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.document = document;\n\n  function document(ccda) {\n    \n      var parseDate = self.doc.parseDate;\n      var parseName = self.doc.parseName;\n      var parseAddress = self.doc.parseAddress;\n      var data = {}, el;\n    \n      var doc = ccda.section('document');\n      var date = parseDate(doc.tag('effectiveTime').attr('value'));\n      var title = Core.stripWhitespace(doc.tag('title').val());\n    \n      // Parse Doc Type Info\n      var templates =  doc.elsByTag('templateId');\n      \n      var rootTemplate = templates[0].attr('root');\n      var secondTemplate;\n      if(templates.length >1)\n        secondTemplate = templates[1].attr('root');\n      else\n        secondTemplate = rootTemplate;\n    \n      var loinc = doc.tag('code').attr('code');\n      var templateId = doc.tag('templateId').attr('root');\n      var displayName = doc.tag('code').attr('displayName');\n    \n      var nonXml = doc.tag('nonXMLBody');\n      var nonXmlNodes = nonXml.el.childNodes;\n    \n      var bodyType = \"structured\";\n      var nonXmlBody = {\n        type: \"\",\n        mediaType: \"\",\n        representation: \"\",\n        rawText: \"\",\n        reference: \"\"\n      };\n      if(nonXmlNodes && nonXmlNodes.length > 0) {\n        bodyType = \"unstructured\";\n        var text = nonXml.tag('text');\n        var mediaType = \"\";\n        var representation = \"\";\n        var rawText = \"\";\n        var reference = \"\";\n        var type = \"\";\n    \n        // We have an embedded doc\n        if(text && text.attr('mediaType')) {\n          mediaType = text.attr('mediaType');\n          representation = text.attr('representation');\n          rawText = text.val();\n          type = \"embedded\";\n        }\n    \n        if(text && !mediaType) {\n          reference = text.tag('reference').attr('value');\n          type = \"reference\";\n        }\n        nonXmlBody = {\n          type: type,\n          mediaType: mediaType,\n          representation: representation,\n          rawText: rawText,\n          reference: reference\n        }\n      }\n    \n      var docType = {\n        type: \"CCDAR2\",\n        rootTemplateId: rootTemplate,\n        templateId: secondTemplate,\n        displayName: displayName,\n        loinc: loinc,\n        bodyType: bodyType,\n        nonXmlBody: nonXmlBody\n      };\n    \n      var author = doc.tag('author');\n      el = author.tag('assignedPerson').tag('name');\n      var name_dict = parseName(el);\n    \n      el = author.tag('addr');\n      var address_dict = parseAddress(el);\n    \n      el = author.tag('telecom');\n      var work_phone = el.attr('value');\n    \n      var documentation_of_list = [];\n      var performers = doc.tag('documentationOf').elsByTag('performer');\n      for (var i = 0; i < performers.length; i++) {\n        el = performers[i];\n        var performer_name_dict = parseName(el);\n        var performer_phone = el.tag('telecom').attr('value');\n        var performer_addr = parseAddress(el.tag('addr'));\n        documentation_of_list.push({\n          name: performer_name_dict,\n          phone: {\n            work: performer_phone\n          },\n          address: performer_addr\n        });\n      }\n    \n      el = doc.tag('encompassingEncounter').tag('location');\n      var location_name = Core.stripWhitespace(el.tag('name').val());\n      var location_addr_dict = parseAddress(el.tag('addr'));\n    \n      var encounter_date = null;\n      el = el.tag('effectiveTime');\n      if (!el.isEmpty()) {\n        encounter_date = parseDate(el.attr('value'));\n      }\n    \n      data = {\n        type: docType,\n        date: date,\n        title: title,\n        author: {\n          name: name_dict,\n          address: address_dict,\n          phone: {\n            work: work_phone\n          }\n        },\n        documentation_of: documentation_of_list,\n        location: {\n          name: location_name,\n          address: location_addr_dict,\n          encounter_date: encounter_date\n        }\n      };\n    \n      return data;\n    };\n}\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Core = __webpack_require__(0);\nvar AllergiesParser = __webpack_require__(33);\nvar CarePlanParser = __webpack_require__(34);\nvar DemographicsParser = __webpack_require__(2);\nvar DocumentParser = __webpack_require__(35);\nvar EncountersParser = __webpack_require__(36);\nvar FreeTextParser = __webpack_require__(37);\nvar FunctionalStatusesParser = __webpack_require__(38);\nvar ImmunizationsParser = __webpack_require__(39);\nvar InstructionsParser = __webpack_require__(40);\nvar MedicationsParser = __webpack_require__(41);\nvar ProblemsParser = __webpack_require__(42);\nvar ProceduresParser = __webpack_require__(43);\nvar ResultsParser = __webpack_require__(44);\nvar SmokingStatusParser = __webpack_require__(45);\nvar VitalsParser = __webpack_require__(46);\n\nvar ParseGenericInfo = __webpack_require__(1);\n\n/*\n * Parser for the CCDA document\n */\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.allergiesParser = new AllergiesParser(self.doc);\n  self.carePlanParser = new CarePlanParser(self.doc);\n  self.demographicsParser = new DemographicsParser(self.doc);\n  self.documentParser = new DocumentParser(self.doc);\n  self.encountersParser = new EncountersParser(self.doc);\n  self.freeTextParser = new FreeTextParser();\n  self.functionalStatusesParser = new FunctionalStatusesParser(self.doc);\n  self.immunizationsParser = new ImmunizationsParser(self.doc);\n  self.instructionsParser = new InstructionsParser();\n  self.medicationsParser = new MedicationsParser(self.doc);\n  self.problemsParser = new ProblemsParser(self.doc);\n  self.proceduresParser = new ProceduresParser(self.doc);\n  self.resultsParser = new ResultsParser(self.doc);\n  self.smokingStatusParser = new SmokingStatusParser(self.doc);\n  self.vitalsParser = new VitalsParser(self.doc);\n\n\n  self.run = function (ccda) {\n    var data = {};\n    \n    data.document              = self.documentParser.document(ccda);\n    data.allergies             = self.allergiesParser.allergies(ccda);\n    data.care_plan             = self.carePlanParser.care_plan(ccda);\n    data.chief_complaint       = self.freeTextParser.free_text(ccda, 'chief_complaint');\n    data.demographics          = self.demographicsParser.demographics(ccda);\n    data.encounters            = self.encountersParser.encounters(ccda);\n    data.functional_statuses   = self.functionalStatusesParser.functional_statuses(ccda);\n    var parsedImmunizations    = self.immunizationsParser.immunizations(ccda);\n    data.immunizations         = parsedImmunizations.administered;\n    data.immunization_declines = parsedImmunizations.declined;\n    data.instructions          = self.instructionsParser.instructions(ccda);\n    data.results               = self.resultsParser.results(ccda);\n    data.medications           = self.medicationsParser.medications(ccda);\n    data.problems              = self.problemsParser.problems(ccda);\n    data.procedures            = self.proceduresParser.procedures(ccda);\n    data.smoking_status        = self.smokingStatusParser.smoking_status(ccda);\n    data.vitals                = self.vitalsParser.vitals(ccda);\n    \n    data.json                        = Core.json;\n    data.document.json               = Core.json;\n    data.allergies.json              = Core.json;\n    data.care_plan.json              = Core.json;\n    data.chief_complaint.json        = Core.json;\n    data.demographics.json           = Core.json;\n    data.encounters.json             = Core.json;\n    data.functional_statuses.json    = Core.json;\n    data.immunizations.json          = Core.json;\n    data.immunization_declines.json  = Core.json;\n    data.instructions.json           = Core.json;\n    data.results.json                = Core.json;\n    data.medications.json            = Core.json;\n    data.problems.json               = Core.json;\n    data.procedures.json             = Core.json;\n    data.smoking_status.json         = Core.json;\n    data.vitals.json                 = Core.json;\n\n    // Decorate each section with Title, templateId and text and adds missing sections\n    ParseGenericInfo(ccda, data);\n\n    return data;\n  };\n}\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the CCDA allergies section\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  \n  self.allergies = function (ccda) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var allergies = ccda.section('allergies');\n  \n      var data = {}, el;\n      data.entries = [];\n      data.displayName = \"Allergies\";\n      data.templateId = allergies.tag('templateId').attr('root');\n      data.text = allergies.tag('text').val(true);\n    \n    allergies.entries().each(function(entry) {\n      \n      el = entry.tag('effectiveTime');\n      var start_date = parseDate(el.tag('low').attr('value')),\n          end_date = parseDate(el.tag('high').attr('value'));\n      \n      el = entry.template('2.16.840.1.113883.10.20.22.4.7').tag('code');\n      var name = el.attr('displayName'),\n          code = el.attr('code'),\n          code_system = el.attr('codeSystem'),\n          code_system_name = el.attr('codeSystemName');\n      \n      // value => reaction_type\n      el = entry.template('2.16.840.1.113883.10.20.22.4.7').tag('value');\n      var reaction_type_name = el.attr('displayName'),\n          reaction_type_code = el.attr('code'),\n          reaction_type_code_system = el.attr('codeSystem'),\n          reaction_type_code_system_name = el.attr('codeSystemName');\n      \n      // reaction\n      el = entry.template('2.16.840.1.113883.10.20.22.4.9').tag('value');\n      var reaction_name = el.attr('displayName'),\n          reaction_code = el.attr('code'),\n          reaction_code_system = el.attr('codeSystem');\n      \n      // severity\n      el = entry.template('2.16.840.1.113883.10.20.22.4.8').tag('value');\n      var severity = el.attr('displayName');\n      \n      // participant => allergen\n      el = entry.tag('participant').tag('code');\n      var allergen_name = el.attr('displayName'),\n          allergen_code = el.attr('code'),\n          allergen_code_system = el.attr('codeSystem'),\n          allergen_code_system_name = el.attr('codeSystemName');\n  \n      // this is not a valid place to store the allergen name but some vendors use it\n      if (!allergen_name) {\n        el = entry.tag('participant').tag('name');\n        if (!el.isEmpty()) {\n          allergen_name = el.val();\n        }\n      }\n      if (!allergen_name) {\n        el = entry.template('2.16.840.1.113883.10.20.22.4.7').tag('originalText');\n        if (!el.isEmpty()) {\n          allergen_name = Core.stripWhitespace(el.val());\n        }\n      }\n      \n      // status\n      el = entry.template('2.16.840.1.113883.10.20.22.4.28').tag('value');\n      var status = el.attr('displayName');\n      \n      data.entries.push({\n        date_range: {\n          start: start_date,\n          end: end_date\n        },\n        name: name,\n        code: code,\n        code_system: code_system,\n        code_system_name: code_system_name,\n        status: status,\n        severity: severity,\n        reaction: {\n          name: reaction_name,\n          code: reaction_code,\n          code_system: reaction_code_system\n        },\n        reaction_type: {\n          name: reaction_type_name,\n          code: reaction_type_code,\n          code_system: reaction_type_code_system,\n          code_system_name: reaction_type_code_system_name\n        },\n        allergen: {\n          name: allergen_name,\n          code: allergen_code,\n          code_system: allergen_code_system,\n          code_system_name: allergen_code_system_name\n        }\n      });\n    });\n    \n    return data;\n  };\n}\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the CCDA \"plan of care\" section\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n    var self = this;\n    self.doc = doc;\n\n    self.care_plan = function (ccda) {        \n        var data = [], el;\n    \n        var data = {}, el;\n        care_plan = ccda.section('care_plan');\n        data.entries = [];\n        data.displayName = \"Care Plan\";\n        data.templateId = care_plan.tag('templateId').attr('root');\n        data.text = care_plan.tag('text').val(true);\n    \n        care_plan.entries().each(function (entry) {\n    \n            var name = null,\n                code = null,\n                code_system = null,\n                code_system_name = null;\n    \n            // Plan of care encounters, which have no other details\n            el = entry.template('2.16.840.1.113883.10.20.22.4.40');\n            if (!el.isEmpty()) {\n                name = 'encounter';\n            } else {\n                el = entry.tag('code');\n    \n                name = el.attr('displayName');\n                code = el.attr('code');\n                code_system = el.attr('codeSystem');\n                code_system_name = el.attr('codeSystemName');\n            }\n    \n            var text = Core.stripWhitespace(entry.tag('text').val(true));\n            var time = entry.tag('effectiveTime').immediateChildTag('center').attr('value');\n    \n            data.entries.push({\n                text: text,\n                name: name,\n                code: code,\n                code_system: code_system,\n                code_system_name: code_system_name,\n                effective_time: parse(time)\n            });\n        });\n    \n        return data;\n    \n        function parse(str) {\n            if (!str) return null;\n            var y = str.substr(0, 4),\n                m = str.substr(4, 2) - 1,\n                d = str.substr(6, 2);\n            var D = new Date(y, m, d);\n            return (D.getFullYear() == y && D.getMonth() == m && D.getDate() == d) ? D : null;\n        }\n    };\n}\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the CCDA document section\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n\n  self.document = function (ccda) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var data = {}, el;\n    \n    var doc = ccda.section('document');\n  \n  \n    // Parse Doc Type Info\n    var templates =  doc.elsByTag('templateId');\n    var rootTemplate = templates[0].attr('root');\n    var secondTemplate;\n    if(templates.length >1)\n      secondTemplate = templates[1].attr('root');\n    else\n      secondTemplate = rootTemplate;\n  \n    var loinc = doc.tag('code').attr('code');\n    var templateId = doc.tag('templateId').attr('root');\n    var displayName = doc.tag('code').attr('displayName');\n  \n    var nonXml = doc.tag('nonXMLBody');\n    var nonXmlNodes = nonXml.el.childNodes;\n  \n    var bodyType = \"structured\";\n    var nonXmlBody = {\n      type: \"\",\n      mediaType: \"\",\n      representation: \"\",\n      rawText: \"\",\n      reference: \"\"\n    };\n    if(nonXmlNodes && nonXmlNodes.length > 0) {\n      bodyType = \"unstructured\";\n      var text = nonXml.tag('text');\n      var mediaType = \"\";\n      var representation = \"\";\n      var rawText = \"\";\n      var reference = \"\";\n      var type = \"\";\n  \n      // We have an embedded doc\n      if(text && text.attr('mediaType')) {\n        mediaType = text.attr('mediaType');\n        representation = text.attr('representation');\n        rawText = text.val();\n        type = \"embedded\";\n      }\n  \n      if(text && !mediaType) {\n         reference = text.tag('reference').attr('value');\n        type = \"reference\";\n      }\n      nonXmlBody = {\n        type: type,\n        mediaType: mediaType,\n        representation: representation,\n        rawText: rawText,\n        reference: reference\n      }\n    }\n  \n    var docType = {\n      type: \"CCDAR2\",\n      rootTemplateId: rootTemplate,\n      templateId: secondTemplate,\n      displayName: displayName,\n      loinc: loinc,\n      bodyType: bodyType,\n      nonXmlBody: nonXmlBody\n    };\n  \n    var date = parseDate(doc.tag('effectiveTime').attr('value'));\n    var title = Core.stripWhitespace(doc.tag('title').val());\n    \n    var author = doc.tag('author');\n    el = author.tag('assignedPerson').tag('name');\n    var name_dict = parseName(el);\n    \n    el = author.tag('addr');\n    var address_dict = parseAddress(el);\n    \n    el = author.tag('telecom');\n    var work_phone = el.attr('value');\n  \n    var documentation_of_list = [];\n    var performers = doc.tag('documentationOf').elsByTag('performer');\n    for (var i = 0; i < performers.length; i++) {\n      el = performers[i];\n      var performer_name_dict = parseName(el);\n      var performer_phone = el.tag('telecom').attr('value');\n      var performer_addr = parseAddress(el.tag('addr'));\n      documentation_of_list.push({\n        name: performer_name_dict,\n        phone: {\n          work: performer_phone\n        },\n        address: performer_addr\n      });\n    }\n  \n    el = doc.tag('encompassingEncounter').tag('location');\n    var location_name = Core.stripWhitespace(el.tag('name').val());\n    var location_addr_dict = parseAddress(el.tag('addr'));\n    \n    var encounter_date = null;\n    el = el.tag('effectiveTime');\n    if (!el.isEmpty()) {\n      encounter_date = parseDate(el.attr('value'));\n    }\n    \n    data = {\n      type: docType,\n      date: date,\n      title: title,\n      author: {\n        name: name_dict,\n        address: address_dict,\n        phone: {\n          work: work_phone\n        }\n      },\n      documentation_of: documentation_of_list,\n      location: {\n        name: location_name,\n        address: location_addr_dict,\n        encounter_date: encounter_date\n      }\n    };\n    \n    return data;\n  };\n}\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n/*\n * Parser for the CCDA encounters section\n */\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n\n  self.encounters = function (ccda) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var encounters = ccda.section('encounters');\n  \n    var data = {}, el;\n    data.entries = [];\n    data.displayName = \"Encounters\";\n    data.templateId = encounters.tag('templateId').attr('root');\n    data.text = encounters.tag('text').val(true);\n    \n    encounters.entries().each(function(entry) {\n      \n      var date = parseDate(entry.tag('effectiveTime').attr('value'));\n      \n      el = entry.tag('code');\n      var name = el.attr('displayName'),\n          code = el.attr('code'),\n          code_system = el.attr('codeSystem'),\n          code_system_name = el.attr('codeSystemName'),\n          code_system_version = el.attr('codeSystemVersion');\n      \n      // translation\n      el = entry.tag('translation');\n      var translation_name = el.attr('displayName'),\n          translation_code = el.attr('code'),\n          translation_code_system = el.attr('codeSystem'),\n          translation_code_system_name = el.attr('codeSystemName');\n      \n      // performer\n      el = entry.tag('performer').tag('code');\n      var performer_name = el.attr('displayName'),\n          performer_code = el.attr('code'),\n          performer_code_system = el.attr('codeSystem'),\n          performer_code_system_name = el.attr('codeSystemName');\n    \n      // participant => location\n      el = entry.tag('participant');\n      var organization = el.tag('code').attr('displayName');\n      \n      var location_dict = parseAddress(el);\n      location_dict.organization = organization;\n  \n      // findings\n      var findings = [];\n      var findingEls = entry.elsByTag('entryRelationship');\n      for (var i = 0; i < findingEls.length; i++) {\n        el = findingEls[i].tag('value');\n        findings.push({\n          name: el.attr('displayName'),\n          code: el.attr('code'),\n          code_system: el.attr('codeSystem')\n        });\n      }\n      \n      data.entries.push({\n        date: date,\n        name: name,\n        code: code,\n        code_system: code_system,\n        code_system_name: code_system_name,\n        code_system_version: code_system_version,\n        findings: findings,\n        translation: {\n          name: translation_name,\n          code: translation_code,\n          code_system: translation_code_system,\n          code_system_name: translation_code_system_name\n        },\n        performer: {\n          name: performer_name,\n          code: performer_code,\n          code_system: performer_code_system,\n          code_system_name: performer_code_system_name\n        },\n        location: location_dict\n      });\n    });\n    \n    return data;\n  };\n}\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for any freetext section (i.e., contains just a single <text> element)\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function() {\n  var self = this;\n\n  self.free_text = function (ccda, sectionName) {    \n    var data = {};\n    \n    var doc = ccda.section(sectionName);\n    var text = Core.stripWhitespace(doc.tag('text').val(true));\n    \n    data = {\n      text: text\n    };\n\n    return data;\n  };\n}\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n/*\n * Parser for the CCDA functional & cognitive status\n */\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n\n  self.functional_statuses = function (ccda) {\n    \n    var parseDate = self.doc.parseDate;\n    var data = [], el;\n  \n    var statuses = ccda.section('functional_statuses');\n  \n    statuses.entries().each(function(entry) {\n  \n      var date = parseDate(entry.tag('effectiveTime').attr('value'));\n      if (!date) {\n        date = parseDate(entry.tag('effectiveTime').tag('low').attr('value'));\n      }\n  \n      el = entry.tag('value');\n  \n      var name = el.attr('displayName'),\n          code = el.attr('code'),\n          code_system = el.attr('codeSystem'),\n          code_system_name = el.attr('codeSystemName');\n  \n      data.push({\n        date: date,\n        name: name,\n        code: code,\n        code_system: code_system,\n        code_system_name: code_system_name\n      });\n    \n    });\n    \n    return data;\n  };  \n}\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the CCDA immunizations section\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n\n  self.immunizations = function (ccda) {    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var administeredData = {}, declinedData = {}, product, el;\n  \n    var immunizations = ccda.section('immunizations');\n  \n    administeredData.entries = [];\n    administeredData.displayName = \"Immunizations\";\n    administeredData.templateId = immunizations.tag('templateId').attr('root');\n    administeredData.text = immunizations.tag('text').val(true);\n  \n    declinedData.entries = [];\n    declinedData.displayName = \"Immunizations Declined\";\n    declinedData.templateId = immunizations.tag('templateId').attr('root');\n    declinedData.text = immunizations.tag('text').val(true);\n    \n    immunizations.entries().each(function(entry) {\n      \n      // date\n      el = entry.tag('effectiveTime');\n      var date = parseDate(el.attr('value'));\n      if (!date) {\n        date = parseDate(el.tag('low').attr('value'));\n      }\n  \n      // if 'declined' is true, this is a record that this vaccine WASN'T administered\n      el = entry.tag('substanceAdministration');\n      var declined = el.boolAttr('negationInd');\n  \n      // product\n      product = entry.template('2.16.840.1.113883.10.20.22.4.54');\n      el = product.tag('code');\n      var product_name = el.attr('displayName'),\n          product_code = el.attr('code'),\n          product_code_system = el.attr('codeSystem'),\n          product_code_system_name = el.attr('codeSystemName');\n  \n      // translation\n      el = product.tag('translation');\n      var translation_name = el.attr('displayName'),\n          translation_code = el.attr('code'),\n          translation_code_system = el.attr('codeSystem'),\n          translation_code_system_name = el.attr('codeSystemName');\n  \n      // misc product details\n      el = product.tag('lotNumberText');\n      var lot_number = el.val();\n  \n      el = product.tag('manufacturerOrganization');\n      var manufacturer_name = el.tag('name').val();\n      \n      // route\n      el = entry.tag('routeCode');\n      var route_name = el.attr('displayName'),\n          route_code = el.attr('code'),\n          route_code_system = el.attr('codeSystem'),\n          route_code_system_name = el.attr('codeSystemName');\n      \n      // instructions\n      el = entry.template('2.16.840.1.113883.10.20.22.4.20');\n      var instructions_text = Core.stripWhitespace(el.tag('text').val());\n      el = el.tag('code');\n      var education_name = el.attr('displayName'),\n          education_code = el.attr('code'),\n          education_code_system = el.attr('codeSystem');\n  \n      // dose\n      el = entry.tag('doseQuantity');\n      var dose_value = el.attr('value'),\n          dose_unit = el.attr('unit');\n      \n      var data = (declined) ? declinedData : administeredData;\n      data.entries.push({\n        date: date,\n        product: {\n          name: product_name,\n          code: product_code,\n          code_system: product_code_system,\n          code_system_name: product_code_system_name,\n          translation: {\n            name: translation_name,\n            code: translation_code,\n            code_system: translation_code_system,\n            code_system_name: translation_code_system_name\n          },\n          lot_number: lot_number,\n          manufacturer_name: manufacturer_name\n        },\n        dose_quantity: {\n          value: dose_value,\n          unit: dose_unit\n        },\n        route: {\n          name: route_name,\n          code: route_code,\n          code_system: route_code_system,\n          code_system_name: route_code_system_name\n        },\n        instructions: instructions_text,\n        education_type: {\n          name: education_name,\n          code: education_code,\n          code_system: education_code_system\n        }\n      });\n    });\n    \n    return {\n      administered: administeredData,\n      declined: declinedData\n    };\n  };\n}\n\n\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the CCDA \"plan of care\" section\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function() {\n  var self = this;\n  \n  self.instructions = function (ccda) {\n    \n    var data = [], el;\n    \n    var instructions = ccda.section('instructions');\n    data.templateId = instructions.tag('templateId').attr('root');\n    \n    instructions.entries().each(function(entry) {\n  \n      el = entry.tag('code');\n      var name = el.attr('displayName'),\n          code = el.attr('code'),\n          code_system = el.attr('codeSystem'),\n          code_system_name = el.attr('codeSystemName');\n  \n      var text = Core.stripWhitespace(entry.tag('text').val(true));\n      \n      data.push({\n        text: text,\n        name: name,\n        code: code,\n        code_system: code_system,\n        code_system_name: code_system_name\n      });\n    });\n    \n    return data;\n  };\n}\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the CCDA medications section\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function (doc) {\n  var self = this;\n  self.doc = doc;\n\n  self.medications = function (ccda) {\n    \n    var parseDate = self.doc.parseDate;\n    var medications = ccda.section('medications');\n  \n    var data = {}, el;\n    data.entries = [];\n    data.displayName = \"Medications\";\n    data.templateId = medications.tag('templateId').attr('root');\n    data.text = medications.tag('text').val(true);\n  \n    medications.entries().each(function(entry) {\n      \n      el = entry.tag('text');\n      var sig = Core.stripWhitespace(el.val());\n  \n      var effectiveTimes = entry.elsByTag('effectiveTime');\n  \n      el = effectiveTimes[0]; // the first effectiveTime is the med start date\n      var start_date = null, end_date = null;\n      if (el) {\n        start_date = parseDate(el.tag('low').attr('value'));\n        end_date = parseDate(el.tag('high').attr('value'));\n      }\n  \n      // the second effectiveTime might the schedule period or it might just\n      // be a random effectiveTime from further in the entry... xsi:type should tell us\n      el = effectiveTimes[1];\n      var schedule_type = null, schedule_period_value = null, schedule_period_unit = null;\n      if (el && el.attr('xsi:type') === 'PIVL_TS') {\n        var institutionSpecified = el.attr('institutionSpecified');\n        if (institutionSpecified === 'true') {\n          schedule_type= 'frequency';\n        } else if (institutionSpecified === 'false') {\n          schedule_type = 'interval';\n        }\n  \n        el = el.tag('period');\n        schedule_period_value = el.attr('value');\n        schedule_period_unit = el.attr('unit');\n      }\n      \n      el = entry.tag('manufacturedProduct').tag('code');\n      var product_name = el.attr('displayName'),\n          product_code = el.attr('code'),\n          product_code_system = el.attr('codeSystem');\n  \n      var product_original_text = null;\n      el = entry.tag('manufacturedProduct').tag('originalText');\n      if (!el.isEmpty()) {\n        product_original_text = Core.stripWhitespace(el.val());\n      }\n      // if we don't have a product name yet, try the originalText version\n      if (!product_name && product_original_text) {\n        product_name = product_original_text;\n      }\n      \n      el = entry.tag('manufacturedProduct').tag('translation');\n      var translation_name = el.attr('displayName'),\n          translation_code = el.attr('code'),\n          translation_code_system = el.attr('codeSystem'),\n          translation_code_system_name = el.attr('codeSystemName');\n      \n      el = entry.tag('doseQuantity');\n      var dose_value = el.attr('value'),\n          dose_unit = el.attr('unit');\n      \n      el = entry.tag('rateQuantity');\n      var rate_quantity_value = el.attr('value'),\n          rate_quantity_unit = el.attr('unit');\n      \n      el = entry.tag('precondition').tag('value');\n      var precondition_name = el.attr('displayName'),\n          precondition_code = el.attr('code'),\n          precondition_code_system = el.attr('codeSystem');\n      \n      el = entry.template('2.16.840.1.113883.10.20.22.4.19').tag('value');\n      var reason_name = el.attr('displayName'),\n          reason_code = el.attr('code'),\n          reason_code_system = el.attr('codeSystem');\n      \n      el = entry.tag('routeCode');\n      var route_name = el.attr('displayName'),\n          route_code = el.attr('code'),\n          route_code_system = el.attr('codeSystem'),\n          route_code_system_name = el.attr('codeSystemName');\n      \n      // participant/playingEntity => vehicle\n      el = entry.tag('participant').tag('playingEntity');\n      var vehicle_name = el.tag('name').val();\n  \n      el = el.tag('code');\n      // prefer the code vehicle_name but fall back to the non-coded one\n      vehicle_name = el.attr('displayName') || vehicle_name;\n      var vehicle_code = el.attr('code'),\n          vehicle_code_system = el.attr('codeSystem'),\n          vehicle_code_system_name = el.attr('codeSystemName');\n      \n      el = entry.tag('administrationUnitCode');\n      var administration_name = el.attr('displayName'),\n          administration_code = el.attr('code'),\n          administration_code_system = el.attr('codeSystem'),\n          administration_code_system_name = el.attr('codeSystemName');\n      \n      // performer => prescriber\n      el = entry.tag('performer');\n      var prescriber_organization = el.tag('name').val(),\n          prescriber_person = null;\n      \n      data.entries.push({\n        date_range: {\n          start: start_date,\n          end: end_date\n        },\n        text: sig,\n        product: {\n          name: product_name,\n          code: product_code,\n          code_system: product_code_system,\n          text: product_original_text,\n          translation: {\n            name: translation_name,\n            code: translation_code,\n            code_system: translation_code_system,\n            code_system_name: translation_code_system_name\n          }\n        },\n        dose_quantity: {\n          value: dose_value,\n          unit: dose_unit\n        },\n        rate_quantity: {\n          value: rate_quantity_value,\n          unit: rate_quantity_unit\n        },\n        precondition: {\n          name: precondition_name,\n          code: precondition_code,\n          code_system: precondition_code_system\n        },\n        reason: {\n          name: reason_name,\n          code: reason_code,\n          code_system: reason_code_system\n        },\n        route: {\n          name: route_name,\n          code: route_code,\n          code_system: route_code_system,\n          code_system_name: route_code_system_name\n        },\n        schedule: {\n          type: schedule_type,\n          period_value: schedule_period_value,\n          period_unit: schedule_period_unit\n        },\n        vehicle: {\n          name: vehicle_name,\n          code: vehicle_code,\n          code_system: vehicle_code_system,\n          code_system_name: vehicle_code_system_name\n        },\n        administration: {\n          name: administration_name,\n          code: administration_code,\n          code_system: administration_code_system,\n          code_system_name: administration_code_system_name\n        },\n        prescriber: {\n          organization: prescriber_organization,\n          person: prescriber_person\n        }\n      });\n    });\n    \n    return data;\n  };\n}\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the CCDA problems section\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n\n  self.problems = function (ccda) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n  \n    var problems = ccda.section('problems');\n  \n    var data = {}, el;\n    data.entries = [];\n    data.displayName = \"Problems\";\n    data.templateId = problems.tag('templateId').attr('root');\n    data.text = problems.tag('text').val(true);\n    \n    problems.entries().each(function(entry) {\n      \n      el = entry.tag('effectiveTime');\n      var start_date = parseDate(el.tag('low').attr('value')),\n          end_date = parseDate(el.tag('high').attr('value'));\n      \n      el = entry.template('2.16.840.1.113883.10.20.22.4.4').tag('value');\n      var name = el.attr('displayName'),\n          code = el.attr('code'),\n          code_system = el.attr('codeSystem'),\n          code_system_name = el.attr('codeSystemName');\n      \n      el = entry.template('2.16.840.1.113883.10.20.22.4.4').tag('translation');\n      var translation_name = el.attr('displayName'),\n        translation_code = el.attr('code'),\n        translation_code_system = el.attr('codeSystem'),\n        translation_code_system_name = el.attr('codeSystemName');\n      \n      el = entry.template('2.16.840.1.113883.10.20.22.4.6');\n      var status = el.tag('value').attr('displayName');\n      \n      var age = null;\n      el = entry.template('2.16.840.1.113883.10.20.22.4.31');\n      if (!el.isEmpty()) {\n        age = parseFloat(el.tag('value').attr('value'));\n      }\n  \n      el = entry.template('2.16.840.1.113883.10.20.22.4.64');\n      var comment = Core.stripWhitespace(el.tag('text').val());\n      \n      data.entries.push({\n        date_range: {\n          start: start_date,\n          end: end_date\n        },\n        name: name,\n        status: status,\n        age: age,\n        code: code,\n        code_system: code_system,\n        code_system_name: code_system_name,\n        translation: {\n          name: translation_name,\n          code: translation_code,\n          code_system: translation_code_system,\n          code_system_name: translation_code_system_name\n        },\n        comment: comment\n      });\n    });\n    \n    return data;\n  };\n}\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the CCDA procedures section\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n\n  self.procedures = function (ccda) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var procedures = ccda.section('procedures');\n  \n    var data = {}, el;\n    data.entries = [];\n    data.displayName = \"Procedures\";\n    data.templateId = procedures.tag('templateId').attr('root');\n    data.text = procedures.tag('text').val(true);\n    \n    procedures.entries().each(function(entry) {\n      \n      el = entry.tag('effectiveTime');\n      var date = parseDate(el.attr('value'));\n      \n      el = entry.tag('code');\n      var name = el.attr('displayName'),\n          code = el.attr('code'),\n          code_system = el.attr('codeSystem');\n  \n      if (!name) {\n        name = Core.stripWhitespace(entry.tag('originalText').val());\n      }\n      \n      // 'specimen' tag not always present\n      el = entry.tag('specimen').tag('code');\n      var specimen_name = el.attr('displayName'),\n          specimen_code = el.attr('code'),\n          specimen_code_system = el.attr('codeSystem');\n      \n      el = entry.tag('performer').tag('addr');\n      var organization = el.tag('name').val(),\n          phone = el.tag('telecom').attr('value');\n      \n      var performer_dict = parseAddress(el);\n      performer_dict.organization = organization;\n      performer_dict.phone = phone;\n      \n      // participant => device\n      el = entry.template('2.16.840.1.113883.10.20.22.4.37').tag('code');\n      var device_name = el.attr('displayName'),\n          device_code = el.attr('code'),\n          device_code_system = el.attr('codeSystem');\n      \n      data.entries.push({\n        date: date,\n        name: name,\n        code: code,\n        code_system: code_system,\n        specimen: {\n          name: specimen_name,\n          code: specimen_code,\n          code_system: specimen_code_system\n        },\n        performer: performer_dict,\n        device: {\n          name: device_name,\n          code: device_code,\n          code_system: device_code_system\n        }\n      });\n    });\n    \n    return data;\n  };\n}\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the CCDA results (labs) section\n */\n\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n\n  self.results = function (ccda) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var results = ccda.section('results');\n  \n    var data = {}, el;\n    data.entries = [];\n    data.displayName = \"Results\";\n    data.templateId = results.tag('templateId').attr('root');\n    data.text = results.tag('text').val(true);\n    \n    results.entries().each(function(entry) {\n      \n      // panel\n      el = entry.tag('code');\n      var panel_name = el.attr('displayName'),\n          panel_code = el.attr('code'),\n          panel_code_system = el.attr('codeSystem'),\n          panel_code_system_name = el.attr('codeSystemName');\n      \n      var observation;\n      var tests = entry.elsByTag('observation');\n      var tests_data = [];\n      \n      for (var i = 0; i < tests.length; i++) {\n        observation = tests[i];\n        \n        var date = parseDate(observation.tag('effectiveTime').attr('value'));\n        \n        el = observation.tag('code');\n        var name = el.attr('displayName'),\n            code = el.attr('code'),\n            code_system = el.attr('codeSystem'),\n            code_system_name = el.attr('codeSystemName');\n  \n        if (!name) {\n          name = Core.stripWhitespace(observation.tag('text').val());\n        }\n        \n        el = observation.tag('translation');\n        var translation_name = el.attr('displayName'),\n          translation_code = el.attr('code'),\n          translation_code_system = el.attr('codeSystem'),\n          translation_code_system_name = el.attr('codeSystemName');\n      \n        el = observation.tag('value');\n        var value = el.attr('value'),\n            unit = el.attr('unit');\n        // We could look for xsi:type=\"PQ\" (physical quantity) but it seems better\n        // not to trust that that field has been used correctly...\n        if (value && !isNaN(parseFloat(value))) {\n          value = parseFloat(value);\n        }\n        if (!value) {\n          value = el.val(); // look for free-text values\n        }\n        \n        el = observation.tag('referenceRange');\n        var reference_range_text = Core.stripWhitespace(el.tag('observationRange').tag('text').val()),\n            reference_range_low_unit = el.tag('observationRange').tag('low').attr('unit'),\n            reference_range_low_value = el.tag('observationRange').tag('low').attr('value'),\n            reference_range_high_unit = el.tag('observationRange').tag('high').attr('unit'),\n            reference_range_high_value = el.tag('observationRange').tag('high').attr('value');\n        \n        tests_data.push({\n          date: date,\n          name: name,\n          value: value,\n          unit: unit,\n          code: code,\n          code_system: code_system,\n          code_system_name: code_system_name,\n          translation: {\n            name: translation_name,\n            code: translation_code,\n            code_system: translation_code_system,\n            code_system_name: translation_code_system_name\n          },\n          reference_range: {\n            text: reference_range_text,\n            low_unit: reference_range_low_unit,\n            low_value: reference_range_low_value,\n            high_unit: reference_range_high_unit,\n            high_value: reference_range_high_value,\n          }\n        });\n      }\n      \n      data.entries.push({\n        name: panel_name,\n        code: panel_code,\n        code_system: panel_code_system,\n        code_system_name: panel_code_system_name,\n        tests: tests_data\n      });\n    });\n    \n    return data;\n  };\n}\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports) {\n\n/*\n * Parser for the CCDA smoking status in social history section\n */\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n\n  self.smoking_status = function (ccda) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var data, el;\n  \n    var name = null,\n        code = null,\n        code_system = null,\n        code_system_name = null,\n        entry_date = null;\n  \n    // We can parse all of the social_history sections,\n    // but in practice, this section seems to be used for\n    // smoking status, so we're just going to break that out.\n    // And we're just looking for the first non-empty one.\n    var social_history = ccda.section('social_history');\n    var entries = social_history.entries();\n    for (var i=0; i < entries.length; i++) {\n      var entry = entries[i];\n  \n      var smoking_status = entry.template('2.16.840.1.113883.10.20.22.4.78');\n      if (smoking_status.isEmpty()) {\n        smoking_status = entry.template('2.16.840.1.113883.10.22.4.78');\n      }\n      if (smoking_status.isEmpty()) {\n        continue;\n      }\n  \n      el = smoking_status.tag('effectiveTime');\n      entry_date = parseDate(el.attr('value'));\n  \n      el = smoking_status.tag('value');\n      name = el.attr('displayName');\n      code = el.attr('code');\n      code_system = el.attr('codeSystem');\n      code_system_name = el.attr('codeSystemName');\n  \n      if (name) {\n        break;\n      }\n    }\n  \n    data = {\n      date: entry_date,\n      name: name,\n      code: code,\n      code_system: code_system,\n      code_system_name: code_system_name\n    };\n    \n    return data;\n  };  \n}\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports) {\n\n/*\n * Parser for the CCDA vitals section\n */\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n\n  self.vitals = function (ccda) {\n    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var vitals = ccda.section('vitals');\n  \n    var data = {}, el;\n    data.entries = [];\n    data.displayName = \"Vitals\";\n    data.templateId = vitals.tag('templateId').attr('root');\n    data.text = vitals.tag('text').val(true);\n  \n    vitals.entries().each(function(entry) {\n      \n      el = entry.tag('effectiveTime');\n      var entry_date = parseDate(el.attr('value'));\n      \n      var result;\n      var results = entry.elsByTag('component');\n      var results_data = [];\n      \n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        \n        el = result.tag('code');\n        var name = el.attr('displayName'),\n            code = el.attr('code'),\n            code_system = el.attr('codeSystem'),\n            code_system_name = el.attr('codeSystemName');\n        \n        el = result.tag('value');\n        var value = parseFloat(el.attr('value')),\n            unit = el.attr('unit');\n        \n        results_data.push({\n          name: name,\n          code: code,\n          code_system: code_system,\n          code_system_name: code_system_name,\n          value: value,\n          unit: unit\n        });\n      }\n      \n      data.entries.push({\n        date: entry_date,\n        results: results_data\n      });\n    });\n    \n    return data;\n  };\n}\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the CCDAR2 document\n */\n\nvar ParseGenericInfo = __webpack_require__(1);\nvar Core = __webpack_require__(0);\n\nvar DocumentParser = __webpack_require__(48);\nvar DemographicsParser = __webpack_require__(2);\nvar HealthConcernsParser = __webpack_require__(4);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n  self.documentParser = new DocumentParser(self.doc);\n  self.demographicsParser = new DemographicsParser(self.doc);\n  self.healthConcernsParser = new HealthConcernsParser(self.doc);\n\n  self.run = function (ccda) {    \n      var data = {};\n  \n      data.document              = self.documentParser.document(ccda);\n      data.demographics          = self.demographicsParser.demographics(ccda);\n      data.health_concerns_document  = self.healthConcernsParser.health_concerns_document(ccda);\n      data.json                  = Core.json;\n  \n      // Decorate each section with Title, templateId and text and adds missing sections\n      ParseGenericInfo(ccda, data);\n  \n      return data;\n    };\n}\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n * Parser for the CCDAR2 document section\n */\nvar Core = __webpack_require__(0);\n\nmodule.exports = function(doc) {\n  var self = this;\n  self.doc = doc;\n\n  self.document = function (ccda) {    \n    var parseDate = self.doc.parseDate;\n    var parseName = self.doc.parseName;\n    var parseAddress = self.doc.parseAddress;\n    var data = {}, el;\n  \n    var doc = ccda.section('document');\n    var date = parseDate(doc.tag('effectiveTime').attr('value'));\n    var title = Core.stripWhitespace(doc.tag('title').val());\n  \n    // Parse Doc Type Info\n    var templates =  doc.elsByTag('templateId');\n  \n    var rootTemplate = templates[0].attr('root');\n    var secondTemplate;\n    if(templates.length >1)\n      secondTemplate = templates[1].attr('root');\n    else\n      secondTemplate = rootTemplate;\n  \n    var loinc = doc.tag('code').attr('code');\n    var templateId = doc.tag('templateId').attr('root');\n    var displayName = doc.tag('code').attr('displayName');\n  \n    var nonXml = doc.tag('nonXMLBody');\n    var nonXmlNodes = nonXml.el.childNodes;\n  \n    var bodyType = \"structured\";\n    var nonXmlBody = {\n      type: \"\",\n      mediaType: \"\",\n      representation: \"\",\n      rawText: \"\",\n      reference: \"\"\n    };\n    if(nonXmlNodes && nonXmlNodes.length > 0) {\n      bodyType = \"unstructured\";\n      var text = nonXml.tag('text');\n      var mediaType = \"\";\n      var representation = \"\";\n      var rawText = \"\";\n      var reference = \"\";\n      var type = \"\";\n  \n      // We have an embedded doc\n      if(text && text.attr('mediaType')) {\n        mediaType = text.attr('mediaType');\n        representation = text.attr('representation');\n        rawText = text.val();\n        type = \"embedded\";\n      }\n  \n      if(text && !mediaType) {\n        reference = text.tag('reference').attr('value');\n        type = \"reference\";\n      }\n      nonXmlBody = {\n        type: type,\n        mediaType: mediaType,\n        representation: representation,\n        rawText: rawText,\n        reference: reference\n      }\n    }\n  \n    var docType = {\n      type: \"CCDAR2\",\n      rootTemplateId: rootTemplate,\n      templateId: secondTemplate,\n      displayName: displayName,\n      loinc: loinc,\n      bodyType: bodyType,\n      nonXmlBody: nonXmlBody\n    };\n  \n    var author = doc.tag('author');\n    el = author.tag('assignedPerson').tag('name');\n    var name_dict = parseName(el);\n  \n    el = author.tag('addr');\n    var address_dict = parseAddress(el);\n  \n    el = author.tag('telecom');\n    var work_phone = el.attr('value');\n  \n    var documentation_of_list = [];\n    var performers = doc.tag('documentationOf').elsByTag('performer');\n    for (var i = 0; i < performers.length; i++) {\n      el = performers[i];\n      var performer_name_dict = parseName(el);\n      var performer_phone = el.tag('telecom').attr('value');\n      var performer_addr = parseAddress(el.tag('addr'));\n      documentation_of_list.push({\n        name: performer_name_dict,\n        phone: {\n          work: performer_phone\n        },\n        address: performer_addr\n      });\n    }\n  \n    el = doc.tag('encompassingEncounter').tag('location');\n    var location_name = Core.stripWhitespace(el.tag('name').val());\n    var location_addr_dict = parseAddress(el.tag('addr'));\n  \n    var encounter_date = null;\n    el = el.tag('effectiveTime');\n    if (!el.isEmpty()) {\n      encounter_date = parseDate(el.attr('value'));\n    }\n  \n    data = {\n      type: docType,\n      date: date,\n      title: title,\n      author: {\n        name: name_dict,\n        address: address_dict,\n        phone: {\n          work: work_phone\n        }\n      },\n      documentation_of: documentation_of_list,\n      location: {\n        name: location_name,\n        address: location_addr_dict,\n        encounter_date: encounter_date\n      }\n    };\n  \n    return data;\n  };\n}\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=bluebutton.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bluebutton/build/bluebutton.js\n// module id = 20\n// module chunks = 0","module.exports = require(\"xmldom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"xmldom\"\n// module id = 21\n// module chunks = 0","module.exports = require(\"rxjs/Observable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Observable\"\n// module id = 22\n// module chunks = 0","import _ from 'lodash';\r\nimport { Section, Document } from './models';\r\n\r\nexport const SECTIONS: Section[] = [\r\n  { key: 'allergies', display: 'Allergies', tagName: 'allergies', icon: 'pagelines' },\r\n  { key: 'care_plan', display: 'Care Plan', tagName: 'generic', icon: 'sticky-note-o' },\r\n  { key: 'chief_complaint', display: 'Chief Complaint', tagName: 'generic', icon: 'bullhorn' },\r\n  { key: 'encounters', display: 'Encounters', tagName: 'generic', icon: 'stethoscope' },\r\n  { key: 'functional_statuses', display: 'Functional Status', tagName: 'generic', icon: 'wheelchair' },\r\n  { key: 'immunization_declines', display: 'Declined Immunizations', tagName: 'generic', icon: 'ban' },\r\n  { key: 'immunizations', display: 'Immunization', tagName: 'generic', icon: 'eyedropper' },\r\n  { key: 'instructions', display: 'Patient Instructions', tagName: 'generic', icon: 'user-md' },\r\n  { key: 'medications', display: 'Medications', tagName: 'medications', icon: 'medkit' },\r\n  { key: 'problems', display: 'Problems', tagName: 'generic', icon: 'exclamation-triangle' },\r\n  { key: 'procedures', display: 'Procedures', tagName: 'generic', icon: 'hospital-o' },\r\n  { key: 'results', display: 'Results', tagName: 'generic', icon: 'flask' },\r\n  { key: 'smoking_status', display: 'Smoking Status', tagName: 'generic', icon: 'fire' },\r\n  { key: 'vitals', display: 'Vitals', tagName: 'generic', icon: 'heartbeat' },\r\n];\r\n\r\nexport const IGNORE_SECTIONS: string[] = ['document', 'demographics', 'json'];\r\n\r\nlet root: string = 'https://raw.githubusercontent.com/dougludlow/ccdaview/develop/docs/';\r\nlet fileNames: string[] = [\r\n  'C-CDA_R2-1_CCD.xml',\r\n  'C-CDA_R2_Care_Plan.xml',\r\n  'CCD 1.xml',\r\n  'Consult 1.xml',\r\n  'DIR.sample.xml',\r\n  'Discharge Summary 1.xml',\r\n  'Final_Task_Force_Full_Sample_R1.1.xml',\r\n  'HandP 1.xml',\r\n  'Op Note 1.xml',\r\n  'Proc Note 1.xml',\r\n  'Progress Note 1.xml',\r\n  'UD 1.xml',\r\n  'UD 2.xml',\r\n];\r\n\r\nexport const DOCUMENTS: Document[] = _.map(fileNames, (name) => ({\r\n  name: name,\r\n  url: `${root}${name}`\r\n}));\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./app/config.ts","\n    var riot = require('riot')\n    riot.tag2('name', '<span>{opts.name.given[0]} {opts.name.family}{possesive}</span>', '', '', function(opts) {\n    if (opts.possesive) {\n      this.possesive = opts.name.family.slice(-1) === 's' ? '\\'' : '\\'s';\n    }\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/name.tag\n// module id = 24\n// module chunks = 0","\n    var riot = require('riot')\n    import _ from 'lodash';\nimport { DocumentsService } from '../services';\nimport { PreferencesService } from '../services';\n\nriot.tag2('header', '<nav class=\"navbar navbar-default navbar-fixed-top\"> <div class=\"container-fluid\"> <div class=\"navbar-header\"> <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar-collapse-1\" aria-expanded=\"false\"> <span class=\"sr-only\">Toggle navigation</span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> </button> <a class=\"navbar-brand\" href=\"#\"> {opts.data.document.title} - <name name=\"{opts.data.demographics.name}\" class=\"text-muted\"></name> </a> </div> <div class=\"collapse navbar-collapse\" id=\"navbar-collapse-1\"> <ul class=\"nav navbar-nav navbar-right\" id=\"jump-nav\"> <li class=\"dropdown\"> <a href=\"#\" class=\"dropdown-toggle\" id=\"jump\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"> Documents <span class=\"caret\"></span> </a> <ul class=\"dropdown-menu\" aria-labelledby=\"jump\"> <li each=\"{documents}\" class=\"{active: active}\"> <a href=\"#\" onclick=\"{load}\"> {Name} </a> </li> </ul> </li> <li class=\"dropdown\"> <a href=\"#\" class=\"dropdown-toggle\" id=\"jump\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"> Jump to <span class=\"caret\"></span> </a> <ul class=\"dropdown-menu\" aria-labelledby=\"jump\"> <li> <a href=\"#\">Top</a> </li> <li role=\"separator\" class=\"divider\"></li> <li each=\"{opts.sections}\"> <a href=\"#{key}\"> <i class=\"fa fa-{icon}\" aria-hidden=\"true\"></i> {display} </a> </li> </ul> </li> <li class=\"{active: this.parent.showPreferences}\"> <a href=\"#\" onclick=\"{showPreferences}\"> <i class=\"fa fa-lg fa-cog\"></i> </a> </li> </ul> </div> </div> </nav>', '', '', function(opts) {\n\n\n    this.documents = this.opts.documents;\n    this.service = new DocumentsService();\n    this.documents[0].active = true;\n\n    this.load = function(e) {\n      this.toggleActive(e);\n      this.service.fetch(e.item.Url).subscribe(function(options) {\n        if (!options) return;\n        if(!options.pref.isSet) {\n          this.parent.showPreferences = true;\n        };\n\n        this.parent.update(options);\n        riot.update();\n      }.bind(this));\n    }\n\n    this.showPreferences = function() {\n      this.parent.showPreferences = true;\n      this.parent.update();\n    }\n\n    this.toggleActive = function(e) {\n      _.each(this.documents, function(d) {\n        d.active = false;\n      });\n      e.item.active = true;\n    }\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/header.tag\n// module id = 25\n// module chunks = 0","\n    var riot = require('riot')\n    import _ from 'lodash';\n\nriot.tag2('panel', '<div class=\"panel panel-{opts.state ? opts.state : \\'default\\'}\" id=\"{opts.section.key}\"> <div class=\"panel-heading section-toggle\" onclick=\"{toggleSection}\"> <h3 class=\"panel-title\"> <i class=\"fa fa-{opts.section.icon} section-icon\" aria-hidden=\"true\" if=\"{!opts.hideicon}\"></i> {opts.section.display} <span class=\"section-item-count badge badge-muted\" if=\"{opts.data.entries && opts.data.entries.length}\">{opts.data.entries.length}</span> <span class=\"text-muted\" if=\"{isEmpty()}\">(empty)</span> <span class=\"pull-right\"> <i class=\"fa fa-chevron-down {fa-rotate-180: opts.section.enabled}\" aria-hidden=\"true\"></i> </span> </h3> </div> <div class=\"panel-body\"> <yield></yield> </div> </div>', '', 'class=\"{opts.section.tagName}\" class=\"{fade: isEmpty(), expanded: isEnabled(), collapsed: !isEnabled()}\"', function(opts) {\n    var current;\n\n    this.on('update', function() {\n      if (opts.data !== current) {\n        current = opts.data;\n        if(this.isEmpty()) opts.section.enabled = false;\n      }\n    }.bind(this));\n\n    this.isEmpty = function() {\n      return !_.get(opts, 'data.entries.length') && !opts.data.text;\n    }\n\n    this.isEnabled = function() {\n      return opts.section.enabled || opts.enabled;\n    }\n\n    this.toggleSection = function() {\n      opts.section.enabled = !opts.section.enabled;\n    }\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/panel.tag\n// module id = 26\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('ccda-section', '<allergies if=\"{opts.current.tagName == \\'allergies\\'}\" section=\"{opts.current}\" data=\"{data}\"></allergies> <medications if=\"{opts.current.tagName == \\'medications\\'}\" section=\"{opts.current}\" data=\"{data}\"></medications> <generic if=\"{opts.current.tagName == \\'generic\\'}\" section=\"{opts.current}\" data=\"{data}\"></generic>', '', '', function(opts) {\n\n  var options = {\n    section: opts.current,\n    data: opts.parent.data[opts.current.key]\n  };\n\n  //console.log(\"TagName:\");\n  //console.log(opts.current.tagName);\n\n  //riot.mount(this.root, opts.current.tagName, options);\n  var self = this;\n  this.parent = opts.parent;\n  this.current = opts.current;\n  this.data = self.parent.data[self.current.key];\n  this.on('update', function() {\n    self.data = self.parent.data[self.current.key];\n  });\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/ccda-section.tag\n// module id = 27\n// module chunks = 0","\n    var riot = require('riot')\n    import { bootstrapize } from '../utilities/htmlhelpers';\nriot.tag2('raw', '<span></span>', '', '', function(opts) {\n\n  this.on('update', function() {\n    this.root.innerHTML = bootstrapize(opts.content);\n  }.bind(this));\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/raw.tag\n// module id = 28\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('nonxml', '<div class=\"panel panel-default\"> <div class=\"panel-heading\"> <h3 class=\"panel-title\"> Document Attachment </h3> </div> <div class=\"panel-body\"> The clinical document you are viewing has an attached document <b>{opts.nonxml.reference}</b>. Please download the document through your EMR. <br> </div>', '', '', function(opts) {\n});\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/nonxml.tag\n// module id = 29\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('empty', '<span class=\"text-muted\">This section is empty.</span>', '', '', function(opts) {\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/empty.tag\n// module id = 30\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('generic', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <raw content=\"{opts.data.text}\" if=\"{opts.data.text}\"></raw> <empty if=\"{!opts.data.text}\"></empty> </panel>', '', '', function(opts) {\n    console.log(\"Generic:\");\n    console.log(opts.data.text);\n    console.log(opts.data);\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/generic.tag\n// module id = 31\n// module chunks = 0","\n    var riot = require('riot')\n    import moment from 'moment';\nimport _ from 'lodash';\nimport '../../utilities/lodashmixins';\nimport { languages } from '../../utilities/lang';\n\nriot.tag2('demographics', '<div class=\"panel panel-default\" id=\"demographics\"> <div class=\"panel-heading\"> <h2><name name=\"{opts.demographics.name}\"></name></h2> <a href=\"#\" class=\"toggle-body\" onclick=\"{toggle}\"> <i class=\"fa fa-chevron-down {fa-rotate-180: visible}\" title=\"Show/hide\"></i> </a> <ul class=\"fa-ul\"> <li class=\"dob\"> <i class=\"fa fa-li fa-birthday-cake\" title=\"DOB\"></i> <p>{formatDate(opts.demographics.dob)}</p> </li> <li class=\"guardian\" if=\"{opts.demographics.guardian.name.family}\"> <i class=\"fa fa-li fa-child\" title=\"Guardian\"></i> <name name=\"{opts.demographics.guardian.name}\"></name> <span class=\"text-muted\">(guardian)</span> </li> </ul> </div> <div class=\"panel-body\" show=\"{visible}\"> <ul class=\"fa-ul\"> <li class=\"narrative\"> <i class=\"fa fa-li fa-female\" title=\"Demographics\"></i> <p> <strong>{opts.demographics.name.given[0]}</strong> is a <strong>{opts.demographics.marital_status} {opts.demographics.race} {opts.demographics.gender}</strong> whose religion is <strong>{opts.demographics.religion || \\'unspecified\\'}</strong> and speaks <strong>{formatLanguage(opts.demographics.language)}</strong>. </p> </li> <li> <i class=\"fa fa-li fa-map-marker\" title=\"Address\"></i> <address class=\"address\"> {opts.demographics.address.street[0]}<br> {opts.demographics.address.city}, {opts.demographics.address.state} {opts.demographics.address.zip} </address> </li> <li> <i class=\"fa fa-li fa-phone\" title=\"Phone\"></i> <address class=\"phone\"> {formatPhone(opts.demographics.phone)}</address> </li> <li if=\"{opts.demographics.provider.organization}\"> <i class=\"fa fa-li fa-building\" title=\"Provider\"></i> <p>{opts.demographics.provider.organization}</p> </li> </ul> </div> </div>', '', '', function(opts) {\n    this.visible = true;\n\n    this.toggle = function() {\n      this.visible = !this.visible;\n    }\n\n    this.formatDate = function(date) {\n      return moment(date).format('MMM D, YYYY');\n    }\n\n    this.formatPhone = function(phone) {\n\n      var p = '';\n      // which phone?\n      if (phone.work) {\n        p = phone.work\n      }\n      if (phone.home) {\n        p = phone.home;\n      }\n      if (phone.cell) {\n        p = phone.cell;\n      }\n\n      var clean = \"\";\n      //_.(p).forEach(function(value) {\n        //clean = clean + value;\n      //});\n      for (var i = 0, len = p.length; i < len; i++) {\n        if (!isNaN(p[i])) {\n          clean = clean + p[i];\n        }\n      }\n\n      if (clean.length > 10) {\n        if (clean[0] == '1') {\n          clean = clean.slice(1);\n        }\n      }\n\n      var pretty = '';\n      if (clean.length == 10) {\n        var c = clean;\n        pretty = '(' + c[0] + c[1] + c[2] + ') ' + c[3] + c[4] + c[5] + '-' + c[6] + c[7] + c[8] + c[9];\n      }\n      return pretty;\n    }\n\n    this.formatLanguage = function(languageCode) {\n      return languageCode && languages[languageCode.toLowerCase()] || 'an uknown language';\n    }\n\n    // religion: http://www.hl7.org/documentcenter/public_temp_44EED454-1C23-BA17-0CCDE88B4D98F6FD/standards/vocabulary/vocabulary_tables/infrastructure/vocabulary/ReligiousAffiliation.html\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/demographics.tag\n// module id = 32\n// module chunks = 0","export const languages: any = {\r\n    'aa': 'Afar',\r\n    'aar': 'Afar',\r\n    'ab': 'Abkhazian',\r\n    'abk': 'Abkhazian',\r\n    'af': 'Afrikaans',\r\n    'afr': 'Afrikaans',\r\n    'am': 'Amharic',\r\n    'amh': 'Amharic',\r\n    'ar': 'Arabic',\r\n    'ara': 'Arabic',\r\n    'as': 'Assamese',\r\n    'asm': 'Assamese',\r\n    'ay': 'Aymara',\r\n    'aym': 'Aymara',\r\n    'az': 'Azerbaijani',\r\n    'aze': 'Azerbaijani',\r\n    'ba': 'Bashkir',\r\n    'bak': 'Bashkir',\r\n    'be': 'Byelorussian (Belarusian)',\r\n    'bel': 'Byelorussian (Belarusian)',\r\n    'bg': 'Bulgarian',\r\n    'bul': 'Bulgarian',\r\n    'bh': 'Bihari',\r\n    'bih': 'Bihari',\r\n    'bi': 'Bislama',\r\n    'bis': 'Bislama',\r\n    'bn': 'Bengali (Bangla)',\r\n    'ben': 'Bengali (Bangla)',\r\n    'bo': 'Tibetan',\r\n    'bod': 'Tibetan',\r\n    'br': 'Breton',\r\n    'bre': 'Breton',\r\n    'ca': 'Catalan',\r\n    'cat': 'Catalan',\r\n    'co': 'Corsican',\r\n    'cos': 'Corsican',\r\n    'cs': 'Czech',\r\n    'ces': 'Czech',\r\n    'cy': 'Welsh',\r\n    'cym': 'Welsh',\r\n    'da': 'Danish',\r\n    'dan': 'Danish',\r\n    'de': 'German',\r\n    'deu': 'German',\r\n    'dz': 'Bhutani',\r\n    'dzo': 'Bhutani',\r\n    'el': 'Greek',\r\n    'ell': 'Greek',\r\n    'en': 'English',\r\n    'eng': 'English',\r\n    'eo': 'Esperanto',\r\n    'epo': 'Esperanto',\r\n    'es': 'Spanish',\r\n    'spa': 'Spanish',\r\n    'et': 'Estonian',\r\n    'est': 'Estonian',\r\n    'eu': 'Basque',\r\n    'euq': 'Basque',\r\n    'fa': 'Farsi',\r\n    'fas': 'Farsi',\r\n    'fi': 'Finnish',\r\n    'fin': 'Finnish',\r\n    'fj': 'Fijian',\r\n    'fij': 'Fijian',\r\n    'fo': 'Faeroese',\r\n    'fr': 'French',\r\n    'fra': 'French',\r\n    'fy': 'Frisian',\r\n    'fry': 'Frisian',\r\n    'ga': 'Irish',\r\n    'gle': 'Irish',\r\n    'gd': 'Gaelic (Scottish)',\r\n    'gla': 'Gaelic (Scottish)',\r\n    'gl': 'Galician',\r\n    'glg': 'Galician',\r\n    'gn': 'Guarani',\r\n    'grn': 'Guarani',\r\n    'gu': 'Gujarati',\r\n    'guj': 'Gujarati',\r\n    // marker - need iso 639-2 for remaining langages\r\n    'gv': 'Gaelic (Manx)',\r\n    'ha': 'Hausa',\r\n    'he': 'Hebrew',\r\n    'hi': 'Hindi',\r\n    'hr': 'Croatian',\r\n    'hu': 'Hungarian',\r\n    'hy': 'Armenian',\r\n    'ia': 'Interlingua',\r\n    'id': 'Indonesian',\r\n    'ie': 'Interlingue',\r\n    'ik': 'Inupiak',\r\n    'is': 'Icelandic',\r\n    'it': 'Italian',\r\n    'iu': 'Inuktitut',\r\n    'ja': 'Japanese',\r\n    // 'ja': 'Javanese',\r\n    'ka': 'Georgian',\r\n    'kk': 'Kazakh',\r\n    'kl': 'Greenlandic',\r\n    'km': 'Cambodian',\r\n    'kn': 'Kannada',\r\n    'ko': 'Korean',\r\n    'ks': 'Kashmiri',\r\n    'ku': 'Kurdish',\r\n    'ky': 'Kirghiz',\r\n    'la': 'Latin',\r\n    'li': 'Limburgish ( Limburger)',\r\n    'ln': 'Lingala',\r\n    'lo': 'Laothian',\r\n    'lt': 'Lithuanian',\r\n    'lv': 'Latvian (Lettish)',\r\n    'mg': 'Malagasy',\r\n    'mi': 'Maori',\r\n    'mk': 'Macedonian',\r\n    'ml': 'Malayalam',\r\n    'mn': 'Mongolian',\r\n    'mo': 'Moldavian',\r\n    'mr': 'Marathi',\r\n    'ms': 'Malay',\r\n    'mt': 'Maltese',\r\n    'my': 'Burmese',\r\n    'na': 'Nauru',\r\n    'ne': 'Nepali',\r\n    'nl': 'Dutch',\r\n    'no': 'Norwegian',\r\n    'oc': 'Occitan',\r\n    'om': 'Oromo (Afan, Galla)',\r\n    'or': 'Oriya',\r\n    'pa': 'Punjabi',\r\n    'pl': 'Polish',\r\n    'ps': 'Pashto (Pushto)',\r\n    'pt': 'Portuguese',\r\n    'qu': 'Quechua',\r\n    'rm': 'Rhaeto-Romance',\r\n    'rn': 'Kirundi (Rundi)',\r\n    'ro': 'Romanian',\r\n    'ru': 'Russian',\r\n    'rw': 'Kinyarwanda (Ruanda)',\r\n    'sa': 'Sanskrit',\r\n    'sd': 'Sindhi',\r\n    'sg': 'Sangro',\r\n    'sh': 'Serbo-Croatian',\r\n    'si': 'Sinhalese',\r\n    'sk': 'Slovak',\r\n    'sl': 'Slovenian',\r\n    'sm': 'Samoan',\r\n    'sn': 'Shona',\r\n    'so': 'Somali',\r\n    'sq': 'Albanian',\r\n    'sr': 'Serbian',\r\n    'ss': 'Siswati',\r\n    'st': 'Sesotho',\r\n    'su': 'Sundanese',\r\n    'sv': 'Swedish',\r\n    'sw': 'Swahili (Kiswahili)',\r\n    'ta': 'Tamil',\r\n    'te': 'Telugu',\r\n    'tg': 'Tajik',\r\n    'th': 'Thai',\r\n    'ti': 'Tigrinya',\r\n    'tk': 'Turkmen',\r\n    'tl': 'Tagalog',\r\n    'tn': 'Setswana',\r\n    'to': 'Tonga',\r\n    'tr': 'Turkish',\r\n    'ts': 'Tsonga',\r\n    'tt': 'Tatar',\r\n    'tw': 'Twi',\r\n    'ug': 'Uighur',\r\n    'uk': 'Ukrainian',\r\n    'ur': 'Urdu',\r\n    'uz': 'Uzbek',\r\n    'vi': 'Vietnamese',\r\n    'vo': 'Volapük',\r\n    'wo': 'Wolof',\r\n    'xh': 'Xhosa',\r\n    'yi': 'Yiddish',\r\n    'yo': 'Yoruba',\r\n    // 'zh': 'Chinese (Simplified)',\r\n    // 'zh': 'Chinese (Traditional)',\r\n    'zh': 'Chinese',\r\n    'zu': 'Zulu',\r\n};\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./app/utilities/lang.ts","\n    var riot = require('riot')\n    riot.tag2('allergies', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <div class=\"row\" if=\"{opts.data.entries.length}\"> <div each=\"{opts.data.entries}\" class=\"col-sm-4\"> <div class=\"alert alert-mild clearfix \" role=\"alert\"> <h4>{allergen.name}</h4> <div class=\"pull-left\">{reaction.name}</div> <div class=\"pull-right\">{severity}</div> </div> </div> </div> <empty if=\"{!opts.data.entries.length}\"></empty> </panel>', '', '', function(opts) {\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/allergies.tag\n// module id = 34\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('care-plan', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <empty if=\"{!opts.data.entries.length}\"></empty> </panel>', '', '', function(opts) {\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/care-plan.tag\n// module id = 35\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('chief-complaint', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <empty if=\"{!opts.data.entries.length}\"></empty> </panel>', '', '', function(opts) {\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/chief-complaint.tag\n// module id = 36\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('encounters', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <empty if=\"{!opts.data.entries.length}\"></empty> </panel>', '', '', function(opts) {\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/encounters.tag\n// module id = 37\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('functional-status', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <empty if=\"{!opts.data.entries.length}\"></empty> </panel>', '', '', function(opts) {\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/functional-status.tag\n// module id = 38\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('immunization-declines', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <empty if=\"{!opts.data.entries.length}\"></empty> </panel>', '', '', function(opts) {\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/immunization_declines.tag\n// module id = 39\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('immunizations', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <empty if=\"{!opts.data.entries.length}\"></empty> </panel>', '', '', function(opts) {\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/immunizations.tag\n// module id = 40\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('instructions', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <empty if=\"{!opts.data.entries.length}\"></empty> </panel>', '', '', function(opts) {\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/instructions.tag\n// module id = 41\n// module chunks = 0","\n    var riot = require('riot')\n    import moment from 'moment';\n\nriot.tag2('medications', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <div each=\"{opts.data.entries}\"> <div class=\"row\"> <div class=\"col-md-12\"> <div class=\"header-row\"> {text} <span class=\"header-date pull-right\"> <span class=\"header-small\">{date_range.start_display} - {date_range.end_display} </span> </div> </div> </div> <div class=\"row\"> <div class=\"col-md-12\"> </div> </div> <div class=\"row\"> <div class=\"col-md-4\"> <table class=\"table table-borderless\"> <tbody> <tr> <th> <span class=\"header-small\">Admin</span> </th> <td> <span>{administration.name} [{administration.code}]</span> </td> </tr> <tr> <th> <span class=\"header-small\">Schedule</span> </th> <td> <span>{schedule.type} {schedule.period_value}{schedule.period_unit}</span> </td> </tr> <tr> <th> <span class=\"header-small\">Dose</span> </th> <td> <span>{dose_quantity.value} {dose_quantity.unit}</span> </td> </tr> <tr> <th scope=\"row\"> <span class=\"header-small\">Rate</span> </th> <td> <span>{rate_quantity.value} {rate_quantity.unit}</span> </td> </tr> </tbody> </table> </div> <div class=\"col-md-4\"> <table class=\"table table-borderless\"> <tbody> <tr> <th> <span class=\"header-small\">Route</span> </th> <td> <span>{route.name}</span> </td> </tr> <tr> <th> <span class=\"header-small\">Vehicle</span> </th> <td> <span>{vehicle.name} [{vehicle.code_system_name} {vehicle.code}]</span> </td> </tr> <tr> <th> <span class=\"header-small\">Prescriber</span> </th> <td> <span>{prescriber.organization}</span> </td> </tr> <tr> </tr> </tbody> </table> </div> <div class=\"col-md-4\"> <span class=\"header-small\"><b>Reason</b></span> <p class=\"reasons\">{reason.name}</p> </div> </div> </div> </panel>', '', '', function(opts) {\n\n        this.on('update', function() {\n            _.each(opts.data.entries, function(e) {\n                e.date_range.start_display =  moment(e.date_range.start).format('MMM D, YYYY');\n                e.date_range.end_display =  moment(e.date_range.end).format('MMM D, YYYY');\n            });\n        })\n\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/medications.tag\n// module id = 42\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('problems', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <empty if=\"{!opts.data.entries.length}\"></empty> </panel>', '', '', function(opts) {\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/problems.tag\n// module id = 43\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('procedures', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <empty if=\"{!opts.data.entries.length}\"></empty> </panel>', '', '', function(opts) {\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/procedures.tag\n// module id = 44\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('results', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <empty if=\"{!opts.data.entries.length}\"></empty> </panel>', '', '', function(opts) {\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/results.tag\n// module id = 45\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('smoking-status', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <empty if=\"{!opts.data.entries.length}\"></empty> </panel>', '', '', function(opts) {\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/smoking-status.tag\n// module id = 46\n// module chunks = 0","\n    var riot = require('riot')\n    riot.tag2('vitals', '<panel section=\"{opts.section}\" data=\"{opts.data}\"> <empty if=\"{!opts.data.entries.length}\"></empty> </panel>', '', '', function(opts) {\n});\n\n    \n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/tags/sections/vitals.tag\n// module id = 47\n// module chunks = 0","module.exports = require(\"bootstrap-sass\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bootstrap-sass\"\n// module id = 48\n// module chunks = 0"],"sourceRoot":""}